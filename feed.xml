<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>gorpeln的个人博客 - gorpeln</title>
    <link>https://gorpeln.top</link>
    <description>gorpeln的个人博客（https://gorpeln.top/）是一个追求简洁、高效，专注记录生活点滴、分享技术成长、共享实用资源的个人优秀博客！趁年轻，做自己想做的！欢迎你来这里交流互动，一起探索精彩世界，开启知识与心灵的非凡旅程。</description>
    
      
        <item>
          <title>手机真的在监听你的谈话？</title>
          <link>https://gorpeln.top/article/17486910472</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17486910472</guid>
          
          
          
          
          
          
          <pubDate>Sat, 31 May 2025 19:30:47 +0800</pubDate>
          <description>&lt;p&gt;许多人都遇到过这样的情况：刚跟朋友谈到某件商品，手机很快就推送了相关广告。于是，一种流行的阴谋论便开始流传：“手机在随时监听我们的对话。”但事实真的如此吗？我将从技术原理、经济逻辑、法律监管和实际证据四个维度进行全面分析，以澄清这一误解。&lt;/p&gt;

&lt;h3 id=&quot;一技术层面实时监听难度巨大成本过高&quot;&gt;一、技术层面：实时监听难度巨大，成本过高&lt;/h3&gt;
&lt;p&gt;要想实现“实时监听并精准推送广告”，技术上需要解决三大难题：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;高频音频采集与实时分析&lt;/strong&gt;：如果手机要随时监听，意味着需要持续运行麦克风录音、语音识别与自然语言处理（NLP）技术。这对电池消耗、计算资源、数据处理能力都提出极高要求。目前主流手机的电池和处理器尚无法支撑如此强大的后台持续运行任务。即使是语音助手（如Siri、Google Assistant）也只会在触发特定关键词（“嘿Siri”或“OK Google”）后才启动识别。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;网络传输负担巨大&lt;/strong&gt;：若要实时上传每个用户的所有音频数据，所需的数据流量和服务器存储将达到天文数字。目前全球所有的互联网服务商也无力承担这样巨大的网络带宽需求和存储成本。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;精准的上下文分析&lt;/strong&gt;：困难重重语言中的歧义、方言、噪声干扰，都会导致语音转文字后的准确性大幅降低，更不要说实时理解上下文并匹配广告推送了。这种技术的误差率高、成本大，收益也远远不足以覆盖成本。&lt;/p&gt;

&lt;h3 id=&quot;二商业逻辑监听谈话并非最佳营销策略&quot;&gt;二、商业逻辑：监听谈话并非最佳营销策略&lt;/h3&gt;
&lt;p&gt;很多人认为“监听谈话推广告”对商家有利，但事实上：&lt;/p&gt;

&lt;p&gt;数据精准度不足，效果有限即使商家真的监听了你的对话，由于人们的日常交谈随意性强，很多对话内容与真实需求并无必然联系。从营销角度来看，这种推送的转化率和精准度远不及用户主动搜索、电商浏览历史或社交媒体互动行为所带来的精准。
已存在更有效的数据收集手段广告商早已有更高效、合法且成本更低的方法，例如用户的搜索记录、网页浏览历史、App使用行为、地理位置信息等。这些都是经过用户协议明确授权、合法合规获得的精准信息来源，比起昂贵又敏感的“监听”要安全有效得多。&lt;/p&gt;

&lt;h3 id=&quot;三法律监管监听用户属违法行为风险极大&quot;&gt;三、法律监管：监听用户属违法行为，风险极大&lt;/h3&gt;
&lt;p&gt;在绝大多数国家和地区，包括中国、美国和欧盟，未经用户许可私自监听谈话都是严重违法行为：&lt;/p&gt;

&lt;p&gt;严格的隐私保护法规欧盟的《通用数据保护条例》（GDPR）、美国的隐私保护法案、中国的《个人信息保护法》都对手机App、服务商的权限做出严格限制，违法违规者将面临巨额罚款、声誉损失甚至刑事责任。
法律后果严重，不符合商业理性如果手机厂商或软件公司真的采用监听的方式获取信息，不仅会触犯法律，更会面临严重的法律诉讼风险和公众信任的彻底崩溃。这对于品牌形象和企业长期利益都是致命打击，任何有理性商业头脑的公司都不会冒如此巨大的风险。&lt;/p&gt;

&lt;h3 id=&quot;四实际证据实证研究与官方调查均否认监听行为&quot;&gt;四、实际证据：实证研究与官方调查均否认监听行为&lt;/h3&gt;
&lt;p&gt;实际上，多个权威机构都已对这种谣言进行调查：&lt;/p&gt;

&lt;p&gt;科学实证研究美国东北大学研究团队在2018年进行了一项全面的实验，分析了超过1.7万个App，并未发现任何一个App在用户未授权的情况下秘密录音并上传语音数据。研究团队明确表示，目前尚无证据表明手机存在监听用户谈话的行为。
科技公司公开声明及第三方监督苹果、谷歌等科技巨头多次公开表示从未监听用户对话。若这些声明不属实，面临的法律风险和名誉损害都远远超出任何商业利益。同时，各国监管部门和第三方隐私保护机构也定期审计这些公司，未发现监听行为。&lt;/p&gt;

&lt;h3 id=&quot;为什么会产生这种错觉&quot;&gt;为什么会产生这种错觉？&lt;/h3&gt;
&lt;p&gt;人们之所以误以为手机在监听，很可能是因为：&lt;/p&gt;

&lt;p&gt;选择性注意和心理暗示用户谈论了某个话题后，当看到相关广告时，更容易引起注意并加深记忆，形成“被监听”的错觉。实际上，这类广告可能早就出现，只是用户之前并未留意。
算法精准推荐的效果大数据分析和个性化推荐技术已经十分成熟，通过用户行为（搜索、位置、消费记录）就能高度准确地预测用户兴趣，因此看起来仿佛是“偷听”了对话。
话题的时效性和热度用户谈论的很多话题本身就是当前的热点（比如流行产品、时令商品），而广告系统也在同步更新热点推送内容，使用户感觉“刚说就推送”。&lt;/p&gt;

&lt;h3 id=&quot;结论不存在手机实时监听推送广告的行为&quot;&gt;结论：不存在手机实时监听推送广告的行为&lt;/h3&gt;
&lt;p&gt;综上所述，“手机监听用户谈话推广告”不过是一种误解，是缺乏对技术原理、经济逻辑、法律风险、实际证据全面了解而产生的阴谋论。我们生活在一个隐私保护越来越严密的时代，手机App厂商不仅没有足够的动机、技术条件，也没有胆量去冒违法风险进行实时监听。&lt;/p&gt;

&lt;p&gt;理解真实的推送原理和背后的技术、逻辑、法律基础，我们才能避免被不必要的焦虑和误解困扰。&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>使用Serv00部署在线工具箱</title>
          <link>https://gorpeln.top/article/17460739947</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17460739947</guid>
          
          
          
          
          
          
          <pubDate>Thu, 01 May 2025 12:33:14 +0800</pubDate>
          <description>&lt;h3 id=&quot;效果演示&quot;&gt;效果演示&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20250501123314124.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20250501123314124&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://tool.202090.xyz/&quot;&gt;在线工具箱 演示网站&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在线工具箱：提供丰富的在线工具，如 JSON 格式化、美化、压缩、解析，Unix 时间戳转换，CSS 美化等多功能支持。&lt;/p&gt;

&lt;h3 id=&quot;事前准备&quot;&gt;事前准备&lt;/h3&gt;

&lt;p&gt;域名（ &lt;strong&gt;非必须&lt;/strong&gt;，你也可以使用免费域名）&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.serv00.com/&quot;&gt;Serv00&lt;/a&gt; （ &lt;strong&gt;必须&lt;/strong&gt;，免费注册的，没有可以自行注册但是对IP环境和邮箱要求比较大，注册提示维护一般都是IP或者邮箱不太行，邮箱建议使用谷歌的。）&lt;/p&gt;

&lt;h3 id=&quot;开始部署&quot;&gt;开始部署&lt;/h3&gt;

&lt;p&gt;01、 登录你的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;serv00&lt;/code&gt; 后，点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WWW websites&lt;/code&gt; 再点 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add new website&lt;/code&gt; 添加你的域名我设置为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tool.gorpeln.top&lt;/code&gt; ，点 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add&lt;/code&gt; 添加。看到这个提示 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Operation performed successfully&lt;/code&gt; 成功添加。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20250501123314111.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20250501123314111&quot; /&gt;&lt;/p&gt;

&lt;p&gt;02、 点 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Manage SSL certificates&lt;/code&gt; 可以看到这个ip地址 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;128.204.223.xxx&lt;/code&gt; 然后去你的DNS解析平台绑定。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20250501123314112.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20250501123314112&quot; /&gt;&lt;/p&gt;

&lt;p&gt;03、 打开DNS解析平台解析。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20250501123314113.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20250501123314113&quot; /&gt;&lt;/p&gt;

&lt;p&gt;04、 这样设置完，你打开的设置的网站域名，可以看到这样的页面就是成功。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20250501123314114.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20250501123314114&quot; /&gt;&lt;/p&gt;

&lt;p&gt;05、 接下来正式开始打开 &lt;a href=&quot;https://github.com/gorpeln/tool&quot;&gt;tool下载源码&lt;/a&gt; 。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20250501123314115.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20250501123314115&quot; /&gt;&lt;/p&gt;

&lt;p&gt;06、 点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WWW websites&lt;/code&gt; 再点 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add new website&lt;/code&gt; 再点 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tool.gorpeln.top&lt;/code&gt;的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Details&lt;/code&gt; ，设置你网站的路径，如图所示，修改 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Open Basedir directories&lt;/code&gt; 中的内容，把下方代码中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;serv00的名称&lt;/code&gt; 替换为你的登录用户名， &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;自己的域名&lt;/code&gt; 同理，修改完复制进去保存。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/home/serv00的名称/domains/自己的域名/public_html:/tmp:/usr/share:/usr/local/share:/dev:/tmp:/usr/share:/usr/local/share:/dev:/usr/home/serv00的名称/domains/自己的域名
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20250501123314116.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20250501123314116&quot; /&gt;&lt;/p&gt;

&lt;p&gt;07、 设置完毕，打开serv00 的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;File manager&lt;/code&gt;，上传从github下载的tool源文件压缩包&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20250501123314117.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20250501123314117&quot; /&gt;&lt;/p&gt;

&lt;p&gt;08、 进到你域名这个目录，上传你之前下载好的源码。右键压缩包如图。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20250501123314118.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20250501123314118&quot; /&gt;&lt;/p&gt;

&lt;p&gt;09、 进到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tool-main&lt;/code&gt; 这个目录里面，全选除&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public&lt;/code&gt;外的所有文件&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20250501123314119.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20250501123314119&quot; /&gt;&lt;/p&gt;

&lt;p&gt;10、 选择解压到你域名的目录，只要你跟我图一样就没问题。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20250501123314120.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20250501123314120&quot; /&gt;&lt;/p&gt;

&lt;p&gt;11、 进到命名为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public&lt;/code&gt; 目录，全选所有文件，右键解压到域名目录中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public_html&lt;/code&gt; 目录。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20250501123314121.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20250501123314121&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20250501123314122.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20250501123314122&quot; /&gt;&lt;/p&gt;

&lt;p&gt;12、 进到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public_html&lt;/code&gt; 目录，将命名为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.htaccess&lt;/code&gt; 的文件右键打开使用text方式编辑，你如果没有我图片上的text，就选 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;choose other&lt;/code&gt; 进行选择编辑方式拉到最下面就有了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20250501123314123.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20250501123314123&quot; /&gt;&lt;/p&gt;

&lt;p&gt;13、 将文件内容改为这个代码 然后保存。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AddType application/x-httpd-php71 .php
&amp;lt;IfModule mod_rewrite.c&amp;gt;
  Options +FollowSymlinks -Multiviews
  RewriteEngine On
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteRule ^(.*)$ index.php/$1 [QSA,PT,L]
&amp;lt;/IfModule&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;14、 完成！打开你的网站就可以看到内容了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20250501123314124.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20250501123314124&quot; /&gt;&lt;/p&gt;

&lt;p&gt;15、 （可选项）通过访问 https://你的域名/admin，访问后台，进行相关配置修改。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20250501123314125.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20250501123314125&quot; /&gt;&lt;/p&gt;

</description>
        </item>
      
    
      
        <item>
          <title>自定义博客文章卡片</title>
          <link>https://gorpeln.top/article/17456663587</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17456663587</guid>
          
          
          
          
          
          
          <pubDate>Sat, 26 Apr 2025 19:19:18 +0800</pubDate>
          <description>&lt;h3 id=&quot;效果&quot;&gt;效果&lt;/h3&gt;
&lt;p&gt;迷幻紫&lt;/p&gt;
&lt;div class=&quot;post-card card-theme1&quot;&gt;在这里输入文本&lt;/div&gt;

&lt;p&gt;西瓜红&lt;/p&gt;
&lt;div class=&quot;post-card card-theme2&quot;&gt;在这里输入文本&lt;/div&gt;

&lt;p&gt;天空之境&lt;/p&gt;
&lt;div class=&quot;post-card card-theme3&quot;&gt;在这里输入文本&lt;/div&gt;

&lt;p&gt;小宇宙&lt;/p&gt;
&lt;div class=&quot;post-card card-theme4&quot;&gt;在这里输入文本&lt;/div&gt;

&lt;p&gt;橄榄绿&lt;/p&gt;
&lt;div class=&quot;post-card card-theme5&quot;&gt;在这里输入文本&lt;/div&gt;

&lt;p&gt;小太阳&lt;/p&gt;
&lt;div class=&quot;post-card card-theme6&quot;&gt;在这里输入文本&lt;/div&gt;

&lt;p&gt;优雅紫&lt;/p&gt;
&lt;div class=&quot;post-card card-theme7&quot;&gt;在这里输入文本&lt;/div&gt;

&lt;p&gt;深邃黑&lt;/p&gt;
&lt;div class=&quot;post-card card-theme8&quot;&gt;在这里输入文本&lt;/div&gt;

&lt;h3 id=&quot;代码&quot;&gt;代码&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;迷幻紫
&amp;lt;div class=&quot;post-card card-theme1&quot;&amp;gt;在这里输入文本&amp;lt;/div&amp;gt;
   
西瓜红
&amp;lt;div class=&quot;post-card card-theme2&quot;&amp;gt;在这里输入文本&amp;lt;/div&amp;gt;
    
天空之境
&amp;lt;div class=&quot;post-card card-theme3&quot;&amp;gt;在这里输入文本&amp;lt;/div&amp;gt;
   
小宇宙
&amp;lt;div class=&quot;post-card card-theme4&quot;&amp;gt;在这里输入文本&amp;lt;/div&amp;gt;
    
橄榄绿
&amp;lt;div class=&quot;post-card card-theme5&quot;&amp;gt;在这里输入文本&amp;lt;/div&amp;gt;
    
小太阳
&amp;lt;div class=&quot;post-card card-theme6&quot;&amp;gt;在这里输入文本&amp;lt;/div&amp;gt;
    
优雅紫
&amp;lt;div class=&quot;post-card card-theme7&quot;&amp;gt;在这里输入文本&amp;lt;/div&amp;gt;
    
深邃黑
&amp;lt;div class=&quot;post-card card-theme8&quot;&amp;gt;在这里输入文本&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        </item>
      
    
      
        <item>
          <title>个人博客可以尝试的 100 件事</title>
          <link>https://gorpeln.top/article/17426995265</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17426995265</guid>
          
          
          
          
          
          
          <pubDate>Sun, 23 Mar 2025 11:12:06 +0800</pubDate>
          <description>&lt;ul style=&quot;margin-left:2.8em;list-style-type: none;&quot;&gt;
  &lt;li&gt;✓ 本网站已支持　　☐ 本网站暂不支持　　× 本网站暂不考虑　　&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;✓ 如果你还没有个人网站，可以搭建一个！&lt;/li&gt;
  &lt;li&gt;✓ 写一篇博客，分享你感兴趣的事、最近让你开心的经历、过去一周学到的新东西、读完一本书后的感想、你玩喜欢的游戏的攻略，或者任何你感兴趣的话题。&lt;/li&gt;
  &lt;li&gt;☐ 分享一道最近做的美味菜谱。&lt;/li&gt;
  &lt;li&gt;☐ 发布一张最近拍摄的照片。&lt;/li&gt;
  &lt;li&gt;✓ 创建一个&lt;a href=&quot;/links&quot;&gt;友情链接&lt;/a&gt;，链接你喜爱的个人网站。&lt;/li&gt;
  &lt;li&gt;✓ 添加一个 robots.txt 文件，明确限制搜索引擎和AI抓取你网站的内容。&lt;/li&gt;
  &lt;li&gt;☐ 为你喜欢的乐队、电视剧或其他事物创建一个特别的「纪念馆」或「粉丝小站」。&lt;/li&gt;
  &lt;li&gt;☐ 制作图像热区图，让访客点击图片不同部分探索更多信息，比如你书桌上的物品介绍。&lt;/li&gt;
  &lt;li&gt;✗ 分享你最喜欢的书单。&lt;/li&gt;
  &lt;li&gt;✗ 创建电影推荐专页。&lt;/li&gt;
  &lt;li&gt;✓ 提供一个&lt;a href=&quot;/article/17016025546&quot;&gt;深色模式&lt;/a&gt;选项，让读者更舒适地阅读。&lt;/li&gt;
  &lt;li&gt;✓ 注册并使用一个属于你的专属域名。&lt;/li&gt;
  &lt;li&gt;✓ 添加一个有趣的小彩蛋。&lt;/li&gt;
  &lt;li&gt;✓ 搭建留言板，让大家畅所欲言。&lt;/li&gt;
  &lt;li&gt;✓ 给你的网站或特定页面&lt;a href=&quot;/article/17347663476&quot;&gt;设置背景&lt;/a&gt;图片。&lt;/li&gt;
  &lt;li&gt;☐ 设计一个网站寻宝游戏，让访客通过寻找线索探索你的网站。&lt;/li&gt;
  &lt;li&gt;✓ 在 HTML 代码中加入清晰的注释，帮助新手理解你网页各部分的用途。&lt;/li&gt;
  &lt;li&gt;✓ 分享最近喜欢的网页，比如文章、博客、摄影作品或游戏。&lt;/li&gt;
  &lt;li&gt;✓ 为图片添加描述文字。&lt;/li&gt;
  &lt;li&gt;✓ 使用 &lt;a href=&quot;https://wave.webaim.org/report#/gorpeln.top&quot;&gt;WAVE&lt;/a&gt; 工具检查网站的无障碍访问性。&lt;/li&gt;
  &lt;li&gt;✓ 用 &lt;a href=&quot;https://pagespeed.web.dev/analysis/https-gorpeln-top/uo1m7dhebl?form_factor=desktop&quot;&gt;PageSpeed Insights&lt;/a&gt; 优化网站速度。&lt;/li&gt;
  &lt;li&gt;☐ 如果你发布学术作品，添加引用说明。&lt;/li&gt;
  &lt;li&gt;✗ 创建一个「反向图书馆」清单，记录你拥有但未读的书籍。&lt;/li&gt;
  &lt;li&gt;☐ 制作一个文字小游戏。&lt;/li&gt;
  &lt;li&gt;✓ 记录&lt;a href=&quot;/record&quot;&gt;网站更新日志&lt;/a&gt;。&lt;/li&gt;
  &lt;li&gt;✗ 分享你最近学到的新词列表。&lt;/li&gt;
  &lt;li&gt;✓ 添加 &lt;a href=&quot;/feed.xml&quot;&gt;RSS 订阅&lt;/a&gt; 功能，让访客轻松关注更新。&lt;/li&gt;
  &lt;li&gt;☐ 创建「历史上的今天」功能，链接到以往同日期发布的博客。&lt;/li&gt;
  &lt;li&gt;✓ 添加&lt;a href=&quot;/links#problem&quot;&gt;锚点链接&lt;/a&gt;，提升网站对屏幕阅读器的支持。&lt;/li&gt;
  &lt;li&gt;✓ 制作&lt;a href=&quot;/archives&quot;&gt;文章归档&lt;/a&gt;页面。&lt;/li&gt;
  &lt;li&gt;☐ 为网站设计一个专属吉祥物。&lt;/li&gt;
  &lt;li&gt;✗ 制作并添加一个 88×31 像素的小按钮图标，通常用于网页、博客、论坛等地方的链接按钮或标识图标。这种按钮图标在早期互联网时代非常流行，经常用于交换链接、展示合作伙伴或赞助商的链接。&lt;/li&gt;
  &lt;li&gt;✓ 加入一个网站联盟，比如 &lt;a href=&quot;https://www.foreverblog.cn/blog/577.html&quot;&gt;十年之约&lt;/a&gt; 和 &lt;a href=&quot;https://list.travellings.cn/&quot;&gt;开往 Travellings&lt;/a&gt;。&lt;/li&gt;
  &lt;li&gt;✓ 翻译网站的某个页面到你熟悉或正在学习的语言，比如 &lt;a href=&quot;/notes&quot;&gt;时光本&lt;/a&gt;。&lt;/li&gt;
  &lt;li&gt;✓ 创建&lt;a href=&quot;/resume&quot;&gt;打印样式表&lt;/a&gt;。&lt;/li&gt;
  &lt;li&gt;✓ 确保所有链接有效无误。&lt;/li&gt;
  &lt;li&gt;☐ 发起博客活动，邀请朋友们围绕特定主题每月发表文章，并轮流确定主题。&lt;/li&gt;
  &lt;li&gt;☐ 添加 rel=me 链接，认证其他平台上的个人资料，比如在博客自我介绍中列出自己的 Mastodon、GitHub、Twitter 账号。&lt;/li&gt;
  &lt;li&gt;☐ 做一些额外的惊喜内容（おまけ）。&lt;/li&gt;
  &lt;li&gt;✓ 如果你想展示专业作品，可以创建 HTML &lt;a href=&quot;/resume&quot;&gt;简历页面&lt;/a&gt;。&lt;/li&gt;
  &lt;li&gt;✓ 使用语法高亮工具（如 Prism.js）美化代码片段。&lt;/li&gt;
  &lt;li&gt;✓ 检查和优化 head 标签中的内容。&lt;/li&gt;
  &lt;li&gt;✓ 为网站添加搜索功能。&lt;/li&gt;
  &lt;li&gt;☐ 创建“此刻（now page）”页面，通常用来展示网站拥有者当前正在关注的事情、工作、生活状态或感兴趣的项目。&lt;/li&gt;
  &lt;li&gt;☐ 使用迷你图（sparkline）展示文章发布频率。Sparkline 是指通过一种小巧、简洁的折线或柱状图，以极小的空间清晰地展现文章发布数量在一段时间内的变化趋势。热图也是一个很好的选择。&lt;/li&gt;
  &lt;li&gt;☐ 尝试不同的字体风格。不同的字体适合不同的主题，可以一起调整。&lt;/li&gt;
  &lt;li&gt;✓ 优化标题字号的层次区分。&lt;/li&gt;
  &lt;li&gt;✓ 在文章末尾加入装饰性分隔符。&lt;/li&gt;
  &lt;li&gt;✗ 使用 lite-youtube 组件加快视频加载速度。&lt;/li&gt;
  &lt;li&gt;☐ 更新网站配色方案。&lt;/li&gt;
  &lt;li&gt;✓ 创建 HTML 元素样式&lt;a href=&quot;/article/14402966023&quot;&gt;展示页面&lt;/a&gt;，辅助开发优化。&lt;/li&gt;
  &lt;li&gt;☐ 编写趣味问答，邀请朋友参与。&lt;/li&gt;
  &lt;li&gt;☐ 为网站添加 Webmention 支持。Webmention 是一种开放的 Web 标准，用于在不同网站之间发送和接收消息通知，使得网站可以相互引用、交互以及进行社交化沟通。&lt;/li&gt;
  &lt;li&gt;☐ 制作共享使用的网页组件（web component）。&lt;/li&gt;
  &lt;li&gt;✓ 为图片设置鼠标悬停效果。&lt;/li&gt;
  &lt;li&gt;✗ 添加您说出自己名字或昵称的录音，以便大家知道如何发音。&lt;/li&gt;
  &lt;li&gt;✓ 在&lt;a href=&quot;/article/17347677826&quot;&gt;特别的节日&lt;/a&gt;为网站换上主题装扮。&lt;/li&gt;
  &lt;li&gt;✗ 分享你亲手绘制的画作。&lt;/li&gt;
  &lt;li&gt;✗ 在主页添加互动式像素网格。&lt;/li&gt;
  &lt;li&gt;☐ 标记网站内容为非 AI 生成，可参考这个项目 Not By AI 。&lt;/li&gt;
  &lt;li&gt;☐ 分享你喜爱的播客清单。&lt;/li&gt;
  &lt;li&gt;✓ 为你的兴趣爱好专门开设一个新的网站。&lt;/li&gt;
  &lt;li&gt;✓ 制作&lt;a href=&quot;/favicon.ico&quot;&gt;网站图标&lt;/a&gt;（favicon）。&lt;/li&gt;
  &lt;li&gt;✓ 写一篇纪念个人&lt;a href=&quot;/article/15981552003&quot;&gt;网站发展&lt;/a&gt;史。&lt;/li&gt;
  &lt;li&gt;☐ 添加背景播放音频，如鸟鸣或咖啡厅氛围。&lt;/li&gt;
  &lt;li&gt;☐ 制作个人风格的情绪板（mood board），是指通过搜集并组合图片、颜色、文字、材质等元素，来视觉化呈现个人喜好、风格偏好或某种特定氛围的过程。&lt;/li&gt;
  &lt;li&gt;✓ 使用 HTML 的 &lt;a href=&quot;/links&quot;&gt;details&lt;/a&gt; 和 summary 标签。&lt;/li&gt;
  &lt;li&gt;☐ 自定义文本选中时的高亮颜色。&lt;/li&gt;
  &lt;li&gt;☐ 帮助朋友搭建他们的网站。&lt;/li&gt;
  &lt;li&gt;✓ 为自己撰写网站维护文档。&lt;/li&gt;
  &lt;li&gt;☐ 为喜欢的艺术作品撰写评论。&lt;/li&gt;
  &lt;li&gt;☐ 与朋友合写一篇共同兴趣的博客。&lt;/li&gt;
  &lt;li&gt;✓ 更新旧博客文章。&lt;/li&gt;
  &lt;li&gt;☐ 在文章中添加旁注（sidenotes）。&lt;/li&gt;
  &lt;li&gt;✓ 为长文章创建目录。&lt;/li&gt;
  &lt;li&gt;☐ 为外部链接添加识别小图标。&lt;/li&gt;
  &lt;li&gt;☐ 添加悬浮卡片（hovercards）。悬浮卡片指的是当用户的鼠标指针悬停在某个元素上时，会弹出一个小卡片，显示额外的信息或提示。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;没错。我确实承诺过要列出100个想法。但为了实现这个目标，我需要你的帮助。以上想法是我在个人网站上看到的，但我渴望听到更多人的想法。因此，我诚邀大家帮助我完成这份清单。写下一些可以在个人网站上实现的想法。将这些想法发布到你的博客上，与你的朋友们分享。&lt;/p&gt;

&lt;p&gt;网络的魅力在于，我们可以一起分享想法，共同开发新项目。事实上，我们可以规划定义人们网络体验的路径。我们需要更多人来编织独立网络——那些在网络平台上进行实验并创造自己感兴趣的新事物的人。&lt;/p&gt;

</description>
        </item>
      
    
      
        <item>
          <title>MathJax的基本使用</title>
          <link>https://gorpeln.top/article/17384679236</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17384679236</guid>
          
          
          
          
          
          
          <pubDate>Sun, 02 Feb 2025 11:45:23 +0800</pubDate>
          <description>&lt;h3 id=&quot;一引言&quot;&gt;一、引言&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MathJax&lt;/code&gt;引擎是一个开源的JavaScript库，它允许Web开发者在网页中嵌入高质量的数学公式。通过利用Web的最新技术，MathJax引擎可以解析LaTeX、MathML和AsciiMath等数学标记语言，并将其渲染为可视化的数学公式，这些公式可以在各种浏览器和操作系统上流畅地显示。&lt;/p&gt;

&lt;p&gt;使用MathJax引擎，网页作者可以轻松地编写包含数学内容的文档，而无需担心用户的浏览器或操作系统是否能够正确显示这些数学公式。因为MathJax引擎会自动处理这些兼容性问题，确保用户能够以清晰、准确的方式查看数学内容。&lt;/p&gt;

&lt;p&gt;MathJax引擎的特点包括：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;跨平台兼容性：它支持多种浏览器和操作系统，确保数学公式能够在各种设备上正确显示。&lt;/li&gt;
  &lt;li&gt;高质量的排版：MathJax引擎使用先进的排版算法，确保数学公式能够以清晰、准确的方式呈现。&lt;/li&gt;
  &lt;li&gt;易于使用：通过简单的标记语言，如LaTeX，用户可以轻松地编写数学公式，并将其嵌入到网页中。&lt;/li&gt;
  &lt;li&gt;高度可定制性：MathJax引擎提供了丰富的配置选项，允许用户根据自己的需求进行定制，以满足特定的排版和显示要求。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;总的来说，MathJax引擎是一个功能强大、易于使用的工具，它为Web上的数学内容显示提供了高质量的解决方案。无论是科学论文、教育资料还是技术文档，都可以利用MathJax引擎来呈现复杂的数学公式，提升网页的可读性和专业性。&lt;/p&gt;

&lt;h3 id=&quot;二使用&quot;&gt;二、使用&lt;/h3&gt;
&lt;h4 id=&quot;1安装&quot;&gt;1、安装&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install mathjax@3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;2配置&quot;&gt;2、配置&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MathJax = {
  tex: {
    packages: [&apos;base&apos;],        // 要使用的扩展
    inlineMath: [              // 行内数学公式的开始/结束定界符对
      [&apos;$&apos;, &apos;$&apos;], 
      [&apos;\\(&apos;, &apos;\\)&apos;]
    ],
    displayMath: [             // 显示数学公式的开始/结束定界符对
      [&apos;$$&apos;, &apos;$$&apos;], 
      [&apos;\\[&apos;, &apos;\\]&apos;]
    ],
    processEscapes: true,      // 使用 \$ 来产生一个字面意义上的美元符号
    processEnvironments: true, // 在数学模式之外处理 \begin{xxx}...\end{xxx}
    processRefs: true,         // 在数学模式之外处理 \ref{...}
    digits: /^(?:[0-9]+(?:\{,\}[0-9]{3})*(?:\.[0-9]*)?|\.[0-9]+)/, // 用于识别数字的模式
    tags: &apos;none&apos;,              // 标签类型，可选值为 &apos;none&apos;、&apos;ams&apos; 或 &apos;all&apos;
    tagSide: &apos;right&apos;,          // \tag 宏的位置
    tagIndent: &apos;0.8em&apos;,        // 标签的缩进量
    useLabelIds: true,         // 使用标签名称而不是标签编号作为 ID
    maxMacros: 10000,          // 每个表达式允许的最大宏替换次数
    maxBuffer: 5 * 1024,       // 内部 TeX 字符串的最大大小（5K）
    baseURL: (document.getElementsByTagName(&apos;base&apos;).length === 0) ? &apos;&apos; : String(document.location).replace(/#.*$/, &apos;&apos;)), // 当存在 &amp;lt;base&amp;gt; 标签时，用于标签链接的 URL
    formatError: (jax, err) =&amp;gt; jax.formatError(err) // 当 TeX 语法错误发生时调用的函数
  },
  options: {
    skipHtmlTags: [ &apos;script&apos;, &apos;noscript&apos;, &apos;style&apos;, &apos;textarea&apos;, &apos;pre&apos;, &apos;code&apos;, &apos;annotation&apos;, &apos;annotation-xml&apos; ], // 不会搜索数学公式的 HTML 标签
    includeHtmlTags: { br: &apos;\n&apos;, wbr: &apos;&apos;, &apos;#comment&apos;: &apos;&apos; }, // 可以出现在数学公式内的 HTML 标签
    ignoreHtmlClass: &apos;tex2jax_ignore&apos;,    // 标记不进行搜索的标签的类名
    processHtmlClass: &apos;tex2jax_process&apos;,  // 标记应进行搜索的标签的类名
    compileError: function (doc, math, err) {doc.compileError(math, err)}, // 编译错误处理函数
    typesetError: function (doc, math, err) {doc.typesetError(math, err)}, // 排版错误处理函数
    renderActions: {...} // 渲染操作
  },
  startup: {
    elements: null,          // 要进行排版的元素（默认是文档主体）
    typeset: true,           // 是否执行初始排版
    ready: Startup.defaultReady.bind(Startup),          // 组件加载完成时调用
    pageReady: Startup.defaultPageReady.bind(Startup),  // MathJax 和页面准备好时调用
    document: document,      // 要处理的文档（或片段或字符串）
    invalidOption: &apos;warn&apos;,   // 无效选项是致命错误还是产生警告
    optionError: OPTIONS.optionError,  // 用于报告无效选项的函数
    input: [],               // 要使用的输入引擎的名称（从已加载的引擎中选择）
    output: null,            // 要使用的输出引擎的名称（从已加载的引擎中选择）
    handler: null,           // 要注册的处理程序的名称（从已加载的处理程序中选择）
    adaptor: null            // 要使用的 DOM 适配器的名称（从已加载的适配器中选择）
  },
  svg: {
    scale: 1,                      // 所有表达式的全局缩放因子
    minScale: .5,                  // 要使用的最小缩放因子
    mtextInheritFont: false,       // 使 mtext 元素使用周围字体
    merrorInheritFont: true,       // 使 merror 文本使用周围字体
    mathmlSpacing: false,          // 为 true 时使用 MathML 间距规则，为 false 时使用 TeX 规则
    skipAttributes: {},            // 不复制到输出的 RFDa 等属性
    exFactor: .5,                  // ex 单位的默认大小（以 em 为单位）
    displayAlign: &apos;center&apos;,        // 当 indentalign 设置为 &apos;auto&apos; 时的默认值
    displayIndent: &apos;0&apos;,            // 当 indentshift 设置为 &apos;auto&apos; 时的默认值
    fontCache: &apos;local&apos;,            // 字体缓存设置，可选值为 &apos;local&apos;、&apos;global&apos; 或 &apos;none&apos;
    localID: null,                 // 用于本地字体缓存的 ID（用于单方程处理）
    internalSpeechTitles: true,    // 插入带有语音内容的 &amp;lt;title&amp;gt; 标签
    titleID: 0                     // 用于 aria-labeledby 标题的初始 ID 编号
  }
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;按需配置，如果你都不需要，你可以什么也不配置&lt;/p&gt;

&lt;h4 id=&quot;3复制&quot;&gt;3、复制&lt;/h4&gt;
&lt;p&gt;需要复制时，在对应公式部分点击 右键 -&amp;gt; Copy to Clipboard  -&amp;gt; TeX Commands  即可完成复制 &lt;br /&gt;
&lt;img src=&quot;https://img.gorpeln.top/blog/20250202114523962.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20250202114523962&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;三例子&quot;&gt;三、例子&lt;/h3&gt;
&lt;h4 id=&quot;1四则运算&quot;&gt;1、四则运算&lt;/h4&gt;
&lt;h5 id=&quot;1加减&quot;&gt;1）加减&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$a+b-c$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$a+b-c$&lt;/p&gt;

&lt;h5 id=&quot;2乘法&quot;&gt;2）乘法&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$a\times b$ (注意\times和b之间要有空格)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$a\times b$&lt;/p&gt;

&lt;h5 id=&quot;3分数&quot;&gt;3）分数&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$\frac{a}{b}$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$\frac{a}{b}$&lt;/p&gt;

&lt;h5 id=&quot;4括号&quot;&gt;4）括号&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$(\frac{a}{b})$    
$\left( \frac{a}{b} \right)$    
$\left[ \frac{a}{b} \right]$  
  
# 当使用\left和\right时，它们会根据所包含内容的大小自动调整括号的大小，使得括号能够合适地包围住内容，看起来更加美观和协调。而普通的小括号()不会自动调整大小，在一些复杂的公式中，可能会出现括号与内容大小不匹配的情况 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：  &lt;br /&gt;
$(\frac{a}{b})$   &lt;br /&gt;
$\left( \frac{a}{b} \right)$  &lt;br /&gt;
$\left[ \frac{a}{b} \right]$&lt;/p&gt;

&lt;h5 id=&quot;5四则组合&quot;&gt;5）四则组合&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$\frac{(a+b)\times c}{(d-e)\times f}$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$\frac{(a+b)\times c}{(d-e)\times f}$&lt;/p&gt;

&lt;h4 id=&quot;2比较运算&quot;&gt;2、比较运算&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$a &amp;lt; b$   
$a &amp;gt; b$   
$a = b$   
$a \not= b$   
$a \leq b$   
$a \geq b$   
$a \equiv b$    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：  &lt;br /&gt;
$a &amp;lt; b$ &lt;br /&gt;
$a &amp;gt; b$ &lt;br /&gt;
$a = b$ &lt;br /&gt;
$a \not= b$ &lt;br /&gt;
$a \leq b$ &lt;br /&gt;
$a \geq b$ &lt;br /&gt;
$a \equiv b$&lt;/p&gt;

&lt;h4 id=&quot;3上标与下标&quot;&gt;3、上标与下标&lt;/h4&gt;
&lt;h5 id=&quot;1上标&quot;&gt;1）上标&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$x^a$, $x^{ab}$, $x^ab$ 
   
# 多个字符时，要用花括号代替，不过单个字符时有无花括号是等价的
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$x^a$, $x^{ab}$, $x^ab$&lt;/p&gt;

&lt;h5 id=&quot;2下标&quot;&gt;2）下标&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$a_n$, $a_{nm}$, $a_nm$
   
# 花括号原理同上   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$a_n$, $a_{nm}$, $a_nm$&lt;/p&gt;

&lt;h5 id=&quot;3次方根&quot;&gt;3）次方根&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$\sqrt a$, $\sqrt[n]a$, $\sqrt[nm]{ab}$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$\sqrt a$, $\sqrt[n]a$, $\sqrt[nm]{ab}$&lt;/p&gt;

&lt;h5 id=&quot;4上下标组合&quot;&gt;4）上下标组合&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$a_i^2$, $C^2_{10}$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$a_i^2$, $C^2_{10}$&lt;/p&gt;

&lt;h4 id=&quot;4集合间的运算&quot;&gt;4、集合间的运算&lt;/h4&gt;
&lt;h5 id=&quot;1集合&quot;&gt;1）集合&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$\left\\{
x_1,x_2
\right\\}$ 
  
# 不能直接打花括号，必须要有\left,\right
# 可以写成一行，这样仅为了方便查看
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;效果：$\left\{
x_1,x_2
\right\}$&lt;/p&gt;

&lt;h5 id=&quot;2元素与集合的关系&quot;&gt;2）元素与集合的关系&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$A \in B$           // 元素A 属于 集合B    
$A \notin B$        // 元素A 不属于 集合B    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：  &lt;br /&gt;
$A \in B$             &lt;br /&gt;
$A \notin B$&lt;/p&gt;

&lt;h5 id=&quot;3集合与集合的关系&quot;&gt;3）集合与集合的关系&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$A \subset B$       // 集合A是集合B的 真子集，意味着A的所有元素都在B中，但B中至少存在一个元素不在A中    
$A \subseteq B$     // 集合A是集合B的 子集，即A的所有元素都在B中，A和B有可能相等    
$A \supset B$       // 集合A 真包含 集合B，表明B的所有元素都在A中，但A中至少存在一个元素不在B中    
$A \supseteq B$     // 集合A 包含 集合B，即B的所有元素都在A中，A和B有可能相等    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：  &lt;br /&gt;
$A \subset B$       &lt;br /&gt;
$A \subseteq B$       &lt;br /&gt;
$A \supset B$       &lt;br /&gt;
$A \supseteq B$&lt;/p&gt;

&lt;h5 id=&quot;4集合的基本运算&quot;&gt;4）集合的基本运算&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$A \cap B$          // 集合A与集合B的 交集，由既属于A又属于B的所有元素共同组成    
$A \cup B$          // 集合A与集合B的 并集，由属于A或者属于B的所有元素合并组成    
$A \setminus B$     // 集合A与集合B的 差集，是由所有属于A但不属于B的元素构成的集合，也可表示为 A - B    
$\complement_U A$   // 集合A在全集U中的 补集，即全集中所有不属于A的元素所组成的集合       
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：  &lt;br /&gt;
$A \cap B$            &lt;br /&gt;
$A \cup B$             &lt;br /&gt;
$A \setminus B$ 或 $A - B$       &lt;br /&gt;
$\complement_U A$&lt;/p&gt;

&lt;h5 id=&quot;5集合中的符号&quot;&gt;5）集合中的符号&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ \cdot $           // 一个点    
$ \cdots $          // 三个点    
$ \mid $            // 分隔符    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：  &lt;br /&gt;
$ \cdot $              &lt;br /&gt;
$ \cdots $             &lt;br /&gt;
$ \mid $&lt;/p&gt;

&lt;h5 id=&quot;6集合组合示例&quot;&gt;6）集合组合示例&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$A = \left\\{ x_1,x_2,\cdots,x_n \right\\}$ // 定义集合A，集合A由元素x_1, x_2, ..., x_n组成    
$A\cap \complement_{A\cup B}B=A - B$        // 集合A与集合B在A和B的并集中的补集的交集，等于集合A与集合B的差集   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：  &lt;br /&gt;
$A = \left\{ x_1,x_2,\cdots,x_n \right\}$   &lt;br /&gt;
$A\cap \complement_{A\cup B}B=A - B$&lt;/p&gt;

&lt;h4 id=&quot;5常用特殊函数&quot;&gt;5、常用特殊函数&lt;/h4&gt;
&lt;h5 id=&quot;1三角函数&quot;&gt;1）三角函数&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$\sin x$, $\cos x$, $\tan x$, $\cot x$ 
   
# 注意中间的空格
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$\sin x$, $\cos x$, $\tan x$, $\cot x$&lt;/p&gt;

&lt;h5 id=&quot;2反三角函数&quot;&gt;2）反三角函数&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$\arcsin x$, $\arccos x$, $\arctan x$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$\arcsin x$, $\arccos x$, $\arctan x$&lt;/p&gt;

&lt;h5 id=&quot;3双曲函数&quot;&gt;3）双曲函数&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$\sinh x$, $\cosh x$, $\tanh x$, $\coth x$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$\sinh x$, $\cosh x$, $\tanh x$, $\coth x$&lt;/p&gt;

&lt;h5 id=&quot;4对数&quot;&gt;4）对数&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$\log_ax$, $\ln x$, $\lg x$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$\log_ax$, $\ln x$, $\lg x$&lt;/p&gt;

&lt;h4 id=&quot;6常用特殊符号&quot;&gt;6、常用特殊符号&lt;/h4&gt;
&lt;h5 id=&quot;1求和&quot;&gt;1）求和&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$\sum$, $\sum_{i=1}^n$, $\sum_{i=1}^na_i$, $\sum_{i=1}^{na_i}$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$\sum$, $\sum_{i=1}^n$, $\sum_{i=1}^na_i$, $\sum_{i=1}^{na_i}$&lt;/p&gt;

&lt;h5 id=&quot;2无穷&quot;&gt;2）无穷&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$\infty$, $+\infty$, $-\infty$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$\infty$, $+\infty$, $-\infty$&lt;/p&gt;

&lt;h5 id=&quot;3箭头&quot;&gt;3）箭头&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$\rightarrow$, $\leftarrow$, $\uparrow$, $\downarrow$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$\rightarrow$, $\leftarrow$, $\uparrow$, $\downarrow$&lt;/p&gt;

&lt;h5 id=&quot;4极限&quot;&gt;4）极限&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$\lim$, $\lim_{x\rightarrow 0}$, $\lim_{x\rightarrow \infty}$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$\lim$, $\lim_{x\rightarrow 0}$, $\lim_{x\rightarrow \infty}$&lt;/p&gt;

&lt;h5 id=&quot;5积分&quot;&gt;5）积分&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$\int$, $\int_a^b$, \$int_{ab}^{cd}$   

$ \int_a^b \left( -\frac{1}{x^2} \right) dx = \frac{1}{x}|_a^b = \frac{1}{b} - \frac{1}{a} $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：  &lt;br /&gt;
$\int$, $\int_a^b$, $int_{ab}^{cd}$  &lt;br /&gt;
$ \int_a^b \left( -\frac{1}{x^2} \right) dx = \frac{1}{x}|_a^b = \frac{1}{b} - \frac{1}{a} $&lt;/p&gt;

&lt;h5 id=&quot;6二重积分&quot;&gt;6）二重积分&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$\iint$, $\iint_D$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$\iint$, $\iint_D$&lt;/p&gt;

&lt;h5 id=&quot;7三重积分&quot;&gt;7）三重积分&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$\iiint$, $\iiint_D$
    
# 以此类推，超过四重的积分不可用
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$\iiint$, $\iiint_D$&lt;/p&gt;

&lt;h5 id=&quot;8偏导&quot;&gt;8）偏导&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$\partial$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$\partial$&lt;/p&gt;

&lt;h5 id=&quot;9梯度&quot;&gt;9）梯度&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$\nabla$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$\nabla$&lt;/p&gt;

&lt;h5 id=&quot;10其他&quot;&gt;10）其他&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ \star $ , $ \ast $, $ \oplus $, $ \circ $, $ \bullet $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$ \star $ , $ \ast $, $ \oplus $, $ \circ $, $ \bullet $&lt;/p&gt;

&lt;h4 id=&quot;7常用希腊字母&quot;&gt;7、常用希腊字母&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ \alpha $ // 阿尔法
$ \beta $ // 贝塔
$ \gamma $ // 伽马
$ \delta $ // 德尔塔，变化量
$ \epsilon $ // 伊普西龙
$ \zeta $ // 泽塔
$ \eta $ // 伊塔，机械效率
$ \lambda $ // 兰姆达，常数
$ \mu $ // 缪，摩擦系数
$ \pi $ // 派，圆周率
$ \rho $ // 柔，极径
$ \sigma $ // 西格马，方差
$ \tau $ // 陶，力矩
$ \phi $ // 斐，欧拉函数
$ \chi $ // 希，卡方分布
$ \omega $ // 欧米伽，电阻
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;效果： &lt;br /&gt;
$ \alpha $, 
$ \beta $, 
$ \gamma $, 
$ \Delta $, 
$ \epsilon $, 
$ \zeta $, 
$ \eta $, 
$ \lambda $, 
$ \mu $, 
$ \pi $, 
$ \rho $, 
$ \sigma $, 
$ \tau $, 
$ \phi $, 
$ \chi $, 
$ \omega $&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://img.gorpeln.top/blog/20250202114523961.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot;&gt;更多希腊字母&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;8多行公式&quot;&gt;8、多行公式&lt;/h4&gt;
&lt;h5 id=&quot;1换行&quot;&gt;1）换行&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$$
\begin{aligned}
a \\
b,c \\
d
\end{aligned}
$$  
   
# &apos;\\&apos;是换行
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：  &lt;br /&gt;
\(\begin{aligned}
a \\
b,c \\
d
\end{aligned}\)&lt;/p&gt;

&lt;h5 id=&quot;2空格&quot;&gt;2）空格&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$a \ b $ 
  
# &apos;\&apos;表示一空格
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：$a \ b $&lt;/p&gt;

&lt;h5 id=&quot;3对齐&quot;&gt;3）对齐&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$$\begin{aligned}
[(n+1)!+k]\operatorname{mod}k &amp;amp;=(n+1)!\operatorname{mod}k+k\operatorname{mod}k
\\ &amp;amp;=0+0
\\ &amp;amp;=0
\end{aligned}$$
   
# &apos;&amp;amp;&apos;是对齐
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果： &lt;br /&gt;
\(\begin{aligned}
[(n+1)!+k]\operatorname{mod}k &amp;amp;=(n+1)!\operatorname{mod}k+k\operatorname{mod}k
\\ &amp;amp;=0+0
\\ &amp;amp;=0
\end{aligned}\)&lt;/p&gt;

&lt;h5 id=&quot;4方程组&quot;&gt;4）方程组&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$$ \begin{cases}
x_1+x_2=2
\\ x_1-x_2=0
\end{cases} $$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果： &lt;br /&gt;
\(\begin{cases}
x_1+x_2=2
\\ x_1-x_2=0
\end{cases}\)&lt;/p&gt;

&lt;h5 id=&quot;5矩阵与行列式&quot;&gt;5）矩阵与行列式&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$$ \left(
\begin{matrix}
a &amp;amp;b
\\c &amp;amp;d
\end{matrix}
\right)
,
\left|
\begin{matrix}
a &amp;amp;b
\\c &amp;amp;d
\end{matrix}
\right| $$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;效果：  &lt;br /&gt;
\(\left(
\begin{matrix}
a &amp;amp;b
\\c &amp;amp;d
\end{matrix}
\right)
,
\left|
\begin{matrix}
a &amp;amp;b
\\c &amp;amp;d
\end{matrix}
\right|\)&lt;/p&gt;

&lt;h4 id=&quot;9表格&quot;&gt;9、表格&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$$\begin{array}{c|lcr} n &amp;amp; \text{左} &amp;amp; \text{中} &amp;amp; \text{右} \\ \hline 1 &amp;amp; 0.24 &amp;amp; 1 &amp;amp; 125 \\ 2 &amp;amp; -1 &amp;amp; 189 &amp;amp; -8 \\ 3 &amp;amp; -20 &amp;amp; 2000 &amp;amp; 1+10i \\ \end{array}$$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果：  &lt;br /&gt;
\(\begin{array}{c|lcr} n &amp;amp; \text{左} &amp;amp; \text{中} &amp;amp; \text{右} \\ \hline 1 &amp;amp; 0.24 &amp;amp; 1 &amp;amp; 125 \\ 2 &amp;amp; -1 &amp;amp; 189 &amp;amp; -8 \\ 3 &amp;amp; -20 &amp;amp; 2000 &amp;amp; 1+10i \\ \end{array}\)&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Mac应用发布错误：ITMS-91109</title>
          <link>https://gorpeln.top/article/17372028582</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17372028582</guid>
          
          
          
          
          
          
          <pubDate>Sat, 18 Jan 2025 20:20:58 +0800</pubDate>
          <description>&lt;h3 id=&quot;问题&quot;&gt;问题&lt;/h3&gt;
&lt;p&gt;今天进行 时光本 macOS端 更新的时候，上传安装包到 App Store Connect 成功后，但是在 App Store Connect 一直无法看到相应的构架包，查看邮件后发现了一个警告邮件：Action needed: The uploaded build for 时光本-日记本·笔记本·记事本·备忘录 has one or more issues.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;App Store Connect&lt;/p&gt;

  &lt;p&gt;Hello,&lt;/p&gt;

  &lt;p&gt;We noticed one or more issues with a recent delivery for the following app:&lt;/p&gt;

  &lt;p&gt;时光本-日记本·笔记本·记事本·备忘录
Version 1.2.9
Build 129
Please correct the following issues and upload a new binary to App Store Connect.&lt;/p&gt;

  &lt;p&gt;ITMS-91109: Invalid package contents - The package contains one or more files with the com.apple.quarantine extended file attribute, such as “com.gorpeln.xxx.pkg/Payload/GPNotesForMac.app/Contents/Resources/zh-Hans.lproj/Main.strings”. This attribute isn’t permitted in macOS apps distributed on TestFlight or the App Store. Please remove the attribute from all files within your app and upload again.&lt;/p&gt;

  &lt;p&gt;Apple Developer Relations&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在网上查找这个错误提示表明，提交到 App Store 的 macOS 应用程序包中包含一个或多个带有com.apple.quarantine扩展文件属性的文件，比如com.gorpeln.xxx.pkg/Payload/GPNotesForMac.app/Contents/Resources/zh-Hans.lproj/Main.strings，而这种属性是不被允许的。&lt;/p&gt;

&lt;p&gt;com.apple.quarantine属性是 macOS 的一个安全特性，用于标记从不受信任的来源获取的文件，例如通过互联网下载或 AirDrop 接收的文件，以防止潜在的恶意软件。要解决这个问题，需要移除应用程序中所有文件的 com.apple.quarantine 属性。&lt;/p&gt;

&lt;p&gt;看到网上的结果后知道是安装包中某些文件被添加了com.apple.quarantine 属性，具体可能导致相关错误的原因也很多：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;下载来源的影响&lt;/li&gt;
  &lt;li&gt;Xcode 构建过程问题&lt;/li&gt;
  &lt;li&gt;系统安全机制&lt;/li&gt;
  &lt;li&gt;第三方软件干扰&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;但是具体怎么被添加的就不得而知了，于是就进行了漫长的排查解决过程，最后结果让自己很无奈。&lt;/p&gt;

&lt;h3 id=&quot;解决思路&quot;&gt;解决思路&lt;/h3&gt;
&lt;h4 id=&quot;步骤一-解压安装包&quot;&gt;步骤一： 解压安装包&lt;/h4&gt;
&lt;p&gt;首先导出安装包，按照提示路径，找到对应文件，使用 xattr 查找该文件是否有 com.apple.quarantine ，查找结果显示的确有，并且有标记是keka解压软件，因为我是用的keka进行的安装包解压，想着keka的标记应该是该流程添加，并不是原来 com.apple.quarantine 属性添加的直接原因，于是就尝试其他方法解决该问题。&lt;/p&gt;

&lt;h4 id=&quot;步骤二更新-xcode&quot;&gt;步骤二：更新 Xcode&lt;/h4&gt;
&lt;p&gt;为什么要更新 Xcode 呢，因为在提交 macOS 版本前先提交了 iOS 版本，iOS 版本提交后，提交成功页面显示有警告内容，提示马上要强制使用 Xcode 16 进行开发发布了，所以就想着是不是当前 Xcode 版本太低了导致的呢，于是就进行了更新操作，经过漫长的下载安装，问题依然存在，使用新的 Mac 用户也不行，只能想其他方法了。&lt;/p&gt;

&lt;h4 id=&quot;步骤三操作导出的安装包&quot;&gt;步骤三：操作导出的安装包&lt;/h4&gt;
&lt;p&gt;Xcode 更新不行，想着提示有具体的安装包错误内容路径，就操作删除相关内容的 com.apple.quarantine 属性，网上也有相应的操作流程&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xattr -rd com.apple.quarantine /path/to/YourApp.app&lt;/code&gt;，操作后继续提交，还是不行，还是同样的错误。&lt;/p&gt;

&lt;p&gt;分析这个步骤只是进行简单的安装包操作，没有对安装包里面的内容遍历操作，于是想着进行一下遍历删除操作，但是该操作又无法直接遍历安装包内部内容，于是就进行相应的解压，遍历删除相关属性，操作还算顺利，并且重新打包上传，上传直接就报错了，提示证书问题，确实重新打包没有使用证书，重新查找资料，配置相关重新打包证书，完成打包成功上传，但是苹果接着发来邮件提示证书还是有问题。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hello,&lt;/p&gt;

  &lt;p&gt;We noticed one or more issues with a recent delivery for the following app:&lt;/p&gt;

  &lt;p&gt;时光本-日记本·笔记本·记事本·备忘录
Version 1.3.4
Build 134
Please correct the following issues and upload a new binary to App Store Connect.&lt;/p&gt;

  &lt;p&gt;ITMS-90237: The product archive package’s signature is invalid. Ensure that it is signed with your ‘3rd Party Mac Developer Installer’ certificate.&lt;/p&gt;

  &lt;p&gt;Apple Developer Relations&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;查找 ITMS-90237 问题的解决方法，正确配置相关证书后依然不行，感觉这个方法不太靠谱，虽然能够成功删除 com.apple.quarantine 属性，但是重新将解压的安装包打包十分复杂，想着还是换个方法。&lt;/p&gt;

&lt;p&gt;该步骤相关操作代码：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import os
import subprocess
import shutil


def remove_quarantine_attribute(pkg_path):
    extract_dir = os.path.expanduser(&apos;~/Desktop/unpacked_pkg&apos;)
    if os.path.exists(extract_dir):
        try:
            shutil.rmtree(extract_dir)
            print(f&quot;已删除现有的 {extract_dir} 目录。&quot;)
        except Exception as e:
            print(f&quot;删除 {extract_dir} 目录时出错: {e}&quot;)
            return

    try:
        os.makedirs(extract_dir)
        print(f&quot;成功创建 {extract_dir} 目录。&quot;)
    except Exception as e:
        print(f&quot;创建 {extract_dir} 目录时出错: {e}&quot;)
        return

    try:
        # 尝试使用 xar 解压
        print(&quot;尝试使用 xar 解压 pkg 文件...&quot;)
        result = subprocess.run([&apos;xar&apos;, &apos;-xf&apos;, pkg_path, &apos;-C&apos;, extract_dir], capture_output=True, text=True)
        if result.returncode != 0:
            print(f&quot;使用 xar 解压失败: {result.stderr}&quot;)
            return
        else:
            print(&quot;使用 xar 解压成功。&quot;)

        # 打印解压后的目录内容，便于检查
        print(f&quot;解压后的目录 {extract_dir} 内容:&quot;)
        for item in os.listdir(extract_dir):
            print(item)

        pkg_inner_dir = os.path.join(extract_dir, &apos;com.gorpeln.xxx.pkg&apos;)
        payload_path = os.path.join(pkg_inner_dir, &apos;Payload&apos;)
        if os.path.exists(pkg_inner_dir) and os.path.exists(payload_path):
            # 进入 Payload 所在目录并进行进一步处理
            os.chdir(pkg_inner_dir)
            try:
                # 执行 cat Payload | gunzip -dc | cpio -i 操作
                print(&quot;正在对 Payload 进行进一步解压...&quot;)
                command = &apos;cat Payload | gunzip -dc | cpio -i&apos;
                result = subprocess.run(command, shell=True, capture_output=True, text=True, timeout=60)
                if result.returncode == 0:
                    print(&quot;Payload 进一步解压成功。&quot;)
                else:
                    print(f&quot;对 Payload 进一步解压时出错: {result.stderr}&quot;)
            except subprocess.TimeoutExpired:
                print(&quot;对 Payload 进一步解压时超时，请检查 Payload 文件是否正常。&quot;)
            except subprocess.CalledProcessError as e:
                print(f&quot;对 Payload 进一步解压时出错: {e.stderr}&quot;)
            finally:
                # 切换回上级目录
                os.chdir(&apos;..&apos;)

        # 遍历所有文件并移除属性
        for root, dirs, files in os.walk(extract_dir):
            for file in files:
                file_path = os.path.join(root, file)
                try:
                    subprocess.run([&apos;xattr&apos;, &apos;-d&apos;, &apos;com.apple.quarantine&apos;, file_path], check=True)
                    print(f&quot;成功移除 {file_path} 的 com.apple.quarantine 属性。&quot;)
                except subprocess.CalledProcessError:
                    # 如果文件没有该属性，忽略错误
                    pass

        # 找到 .app 文件
        app_path = None
        payload_extracted_dir = os.path.join(pkg_inner_dir)
        for item in os.listdir(payload_extracted_dir):
            if item.endswith(&apos;.app&apos;):
                app_path = os.path.join(payload_extracted_dir, item)
                break

        if app_path is None:
            print(&quot;未找到有效的 .app 应用程序包。&quot;)
            return

        # 签名 .app 包内的所有文件
        certificate_name_app = &quot;3rd Party Mac Developer Application: xxxxxxxx (xxxxxxxxx)&quot;
        find_command = f&apos;find &quot;{app_path}&quot; -type f -exec codesign --force --deep --sign &quot;{certificate_name_app}&quot; \{\{\}} \;&apos;
        subprocess.run(find_command, shell=True)

        # 签名 .app 包本身
        codesign_command = f&apos;codesign --force --deep --sign &quot;{certificate_name_app}&quot; &quot;{app_path}&quot;&apos;
        subprocess.run(codesign_command, shell=True)

        # 重新打包成 pkg 文件
        new_pkg_path = pkg_path.replace(&apos;.pkg&apos;, &apos;_cleaned.pkg&apos;)
        install_path = &apos;/Applications&apos;
        certificate_name_installer = &quot;3rd Party Mac Developer Installer: xxxxxxxx (xxxxxxxxx)&quot;
        productbuild_command = [
            &apos;productbuild&apos;,
            &apos;--component&apos;, app_path, install_path,
            &apos;--sign&apos;, certificate_name_installer,
            new_pkg_path
        ]
        result = subprocess.run(productbuild_command, capture_output=True, text=True)
        if result.returncode != 0:
            print(f&quot;重新打包并签名 pkg 文件时出错：{result.stderr}&quot;)
        else:
            print(f&quot;处理完成，新的签名 pkg 文件已生成: {new_pkg_path}&quot;)

    except Exception as e:
        print(f&quot;处理过程中出现错误: {e}&quot;)
    finally:
        if os.path.exists(extract_dir):
            try:
                shutil.rmtree(extract_dir)
                print(f&quot;已成功删除临时目录 {extract_dir}。&quot;)
            except Exception as e:
                print(f&quot;删除临时目录 {extract_dir} 时出错: {e}&quot;)


# 使用示例
pkg_path = &apos;/Users/gorpeln/Desktop/123/GPNotesForMac.pkg&apos;
remove_quarantine_attribute(pkg_path)
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;步骤四删除-mac-破解软件&quot;&gt;步骤四：删除 Mac 破解软件&lt;/h4&gt;
&lt;p&gt;怀疑是电脑上安装的某些破解软件导致的，于是进行删除操作，包括删除了keka解压软件，再次尝试打包，问题依然没有解决。想想上个版本到现在电脑上也没有新安装什么应用，应该不是这个原因，只能想其他方法。&lt;/p&gt;

&lt;h4 id=&quot;步骤五删除代码中的相关文件&quot;&gt;步骤五：删除代码中的相关文件&lt;/h4&gt;
&lt;p&gt;尝试直接删除提示有问题的文件，该文件在项目中是语言适配文件，做本地化处理的，删除后虽然对应用体验有一定的影响，但是也没有好的办法，只能先删了提交后再慢慢看具体问题了。删除后提交，居然又发邮件提错误了。。。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;App Store Connect&lt;/p&gt;

  &lt;p&gt;Hello,&lt;/p&gt;

  &lt;p&gt;We noticed one or more issues with a recent delivery for the following app:&lt;/p&gt;

  &lt;p&gt;时光本-日记本·笔记本·记事本·备忘录
Version 1.3.8
Build 138
Please correct the following issues and upload a new binary to App Store Connect.&lt;/p&gt;

  &lt;p&gt;ITMS-91109: Invalid package contents - The package contains one or more files with the com.apple.quarantine extended file attribute, such as “com.gorpeln.xxx.pkg/Payload/GPNotesForMac.app/Contents/Resources/MLHudAlertInfo.png”. This attribute isn’t permitted in macOS apps distributed on TestFlight or the App Store. Please remove the attribute from all files within your app and upload again.&lt;/p&gt;

  &lt;p&gt;Apple Developer Relations&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;看到这个错误后心凉半截，删除了一个文件，但是同样错误又显示了一个新的文件，肯定不能再删除了，因为还不知道到底有多少文件被标记了 com.apple.quarantine 属性，其中被标记的还可能是核心代码，删除后影响项目运行的。并且标记的这个文件应该是一个第三方库文件，想着应该是第三方库有问题，输入搜索后没有发现对应文件，猜想可能是pod导入导致的错误。&lt;/p&gt;

&lt;h4 id=&quot;步骤五固定和更新第三方库&quot;&gt;步骤五：固定和更新第三方库&lt;/h4&gt;
&lt;p&gt;查看 Podfile 文件中第三方库都没有固定版本，想着可能是第三方库更新到新版本后出现了相关问题，于是就设置了所有库的对应版本并进行更新，提交上传，问题依旧。迷茫了，不知道该怎么办了。&lt;/p&gt;

&lt;h4 id=&quot;步骤六降级-xcode-版本&quot;&gt;步骤六：降级 Xcode 版本&lt;/h4&gt;
&lt;p&gt;脑子一昏，想着是不是 Xcode 版本高的问题，用比较旧的版本会不会好呢，于是就下载安装了。显而易见，并不会。因为在app上个版本到现在我除了这次升级，并没有操作 Xcode 版本，正常不会是 Xcode 版本问题的。&lt;/p&gt;

&lt;h4 id=&quot;步骤七删除源码中的相关属性&quot;&gt;步骤七：删除源码中的相关属性&lt;/h4&gt;
&lt;p&gt;不知不觉，这个问题搞了一天了。没想法了，想着还是直接删除提示的对应文件吧，再次搜索提示的MLHudAlertInfo.png，居然看到了这个相关文件，进入查看具体内容，查找在Finder中的内容，确实存在MLHudAlertInfo.png文件。那这就好办了呀，直接查看这个文件是否包含 com.apple.quarantine 属性就行了呀，使用 xattr 查看后，的确存在，&lt;em class=&quot;color-gray&quot;&gt;我感觉有点无语&lt;/em&gt;，基本确认是源码问题，直接使用 xattr 遍历删除项目文件夹下所有文件，重新提交上传，问题完美解决了。&lt;/p&gt;

&lt;h3 id=&quot;总结&quot;&gt;总结&lt;/h3&gt;
&lt;p&gt;具体该问题是怎么导致的呢？&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;静下来想想，无轮提示的 Main.strings 还是 MLHudAlertInfo.png，都是最近甚至多个版本都没有修改过，甚至 MLHudAlert 是导入后只使用，完全没有修改过的，再根据过程中提示到的 keka 解压软件标记，我推测大概率文件相关 com.apple.quarantine 的属性在相关文件下载后使用 keka 解压的时候就已经被标记了，跟随项目多个版本，但由于苹果官方最近收紧对 com.apple.quarantine 属性的检测导致构架包一直无法通过。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;总结这次问题，为什么耗费了这么长时间呢？&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;macOS 软件开发较少，可参考的资料也较少，只能自己摸索&lt;/li&gt;
  &lt;li&gt;解决问题思路问题：一直想的是前面的版本没问题，这次不行，应该是这次上次到这次提交之间修改某些文件导致的，没想到被苹果背刺了。&lt;/li&gt;
  &lt;li&gt;第一次查找MLHudAlertInfo时，可能是因为手动输入错误导致没有成功搜索到相关文件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后，如果感兴趣可以去查看使用一下【时光本】应用，是一款专注效率与记录的笔记工具。可以帮助你整理各种信息，包括便签、清单、图片、纪念日、地址、链接、银行卡、名片、账号、密码等&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>春节灯笼</title>
          <link>https://gorpeln.top/article/17347677826</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17347677826</guid>
          
          
          
          
          
          
          <pubDate>Sat, 21 Dec 2024 15:56:22 +0800</pubDate>
          <description>&lt;p&gt;想为你的博客增添浓浓的春节氛围吗？快来了解我们的独特功能！设定时间后，两个喜庆的灯笼将准时在博客右上角亮起，灯笼上 “新春快乐” 的祝福熠熠生辉，瞬间让你的博客充满节日的欢乐与温馨。这不仅是装饰，更是为访客送上真挚祝福的创意方式，快来探索如何让你的博客在春节别具一格吧。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;效果&lt;/strong&gt;   &lt;br /&gt;
&lt;img src=&quot;https://img.gorpeln.top/blog/20241221151857323.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20241221151857323&quot; /&gt;
&lt;strong&gt;方法&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;../assets/css/deng.css&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;注意：将文件下载到自己博客使用  &lt;br /&gt;
https://gorpeln.top/assets/css/deng.css&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;html代码&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;!-- 春节灯笼 --&amp;gt;
&amp;lt;div style=&quot;display:none;&quot; id=&quot;lanterns&quot;&amp;gt;
    &amp;lt;div class=&quot;deng-box&quot;&amp;gt;
        &amp;lt;div class=&quot;deng&quot;&amp;gt;
            &amp;lt;div class=&quot;xian&quot;&amp;gt;&amp;lt;/div&amp;gt;
            &amp;lt;div class=&quot;deng-a&quot;&amp;gt;
                &amp;lt;div class=&quot;deng-b&quot;&amp;gt;
                    &amp;lt;div class=&quot;deng-t&quot;&amp;gt;快乐&amp;lt;/div&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div class=&quot;shui shui-a&quot;&amp;gt;
                &amp;lt;div class=&quot;shui-c&quot;&amp;gt;&amp;lt;/div&amp;gt;
                &amp;lt;div class=&quot;shui-b&quot;&amp;gt;&amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;deng-box1&quot;&amp;gt;
        &amp;lt;div class=&quot;deng&quot;&amp;gt;
            &amp;lt;div class=&quot;xian&quot;&amp;gt;&amp;lt;/div&amp;gt;
            &amp;lt;div class=&quot;deng-a&quot;&amp;gt;
                &amp;lt;div class=&quot;deng-b&quot;&amp;gt;
                    &amp;lt;div class=&quot;deng-t&quot;&amp;gt;新春&amp;lt;/div&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div class=&quot;shui shui-a&quot;&amp;gt;
                &amp;lt;div class=&quot;shui-c&quot;&amp;gt;&amp;lt;/div&amp;gt;
                &amp;lt;div class=&quot;shui-b&quot;&amp;gt;&amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;!-- 春节灯笼 --&amp;gt;
&amp;lt;script&amp;gt;
document.addEventListener(&quot;DOMContentLoaded&quot;, function() {
    // 获取当前日期
    var currentDate = new Date();
    
    // 定义开始日期和结束日期
    var startDate = new Date(&apos;2025-01-22&apos;);//腊月廿三
    var endDate = new Date(&apos;2025-02-12&apos;);//正月十五

    // 获取 div 元素
    var specialDiv = document.getElementById(&apos;lanterns&apos;);

    // 检查当前日期是否在指定的日期范围内
    if (currentDate &amp;gt;= startDate &amp;amp;&amp;amp; currentDate &amp;lt;= endDate) {
        // 如果在范围内，则显示 div
        specialDiv.style.display = &apos;block&apos;;
    } else {
        // 否则，隐藏 div
        specialDiv.style.display = &apos;none&apos;;
    }
});
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        </item>
      
    
      
        <item>
          <title>彩带、樱花背景</title>
          <link>https://gorpeln.top/article/17347663476</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17347663476</guid>
          
          
          
          
          
          
          <pubDate>Sat, 21 Dec 2024 15:32:27 +0800</pubDate>
          <description>&lt;p&gt;飘舞的彩带，似灵动的画笔，在空中勾勒出绚丽色彩，为世界添一抹活力。    &lt;br /&gt;
而烂漫樱花，如粉白的云霞，纷纷扬扬洒落，诉说着春日的温柔。彩带与樱花，在此交织出满是故事的奇妙天地，等你踏入探寻。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;效果&lt;/strong&gt;   &lt;br /&gt;
&lt;img src=&quot;https://img.gorpeln.top/blog/20241221151857322.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20241221151857322&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;!--  樱花背景 --&amp;gt;
&amp;lt;script type=&quot;text/javascript&quot; src=&quot;/assets/js/sakura.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;!--  丝带背景 --&amp;gt;
&amp;lt;script size=&quot;150&quot; alpha=&quot;0.3&quot; zindex=&quot;-2&quot; src=&quot;/assets/js/ribbon.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;注意：将文件下载到自己博客使用  &lt;br /&gt;
https://gorpeln.top/assets/js/sakura.js  &lt;br /&gt;
https://gorpeln.top/assets/js/ribbon.min.js&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        </item>
      
    
      
        <item>
          <title>节日倒计时与时间进度条</title>
          <link>https://gorpeln.top/article/17347655378</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17347655378</guid>
          
          
          
          
          
          
          <pubDate>Sat, 21 Dec 2024 15:18:57 +0800</pubDate>
          <description>&lt;p&gt;不仅能够精准显示距离特定节日的剩余时间，满足用户对重要节庆的期待与关注，还能直观展示今日、本周、本月乃至本年已悄然流逝的时间比例，帮助用户实时洞察时间的流转，让每一刻都能在时间的刻度中清晰呈现，实现对时间的高效感知与管理。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;效果&lt;/strong&gt;  &lt;br /&gt;
&lt;img src=&quot;https://img.gorpeln.top/blog/20241221151857321.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20241221151857321&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;方法&lt;/strong&gt; &lt;br /&gt;
1、 countdown.html&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div class=&quot;countdownNav&quot; id=&quot;countdownNav&quot;&amp;gt;
    &amp;lt;div class=&quot;card-widget card-countdown&quot;&amp;gt;
        &amp;lt;div class=&quot;item-headline&quot;&amp;gt;&amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class=&quot;item-content&quot;&amp;gt;
            &amp;lt;div class=&quot;cd-count-left&quot;&amp;gt;
                &amp;lt;span class=&quot;cd-text&quot;&amp;gt;距离&amp;lt;/span&amp;gt;
                &amp;lt;span class=&quot;cd-name&quot; id=&quot;eventName&quot;&amp;gt;节日&amp;lt;/span&amp;gt;
                &amp;lt;span class=&quot;cd-time&quot; id=&quot;daysUntil&quot;&amp;gt;000&amp;lt;/span&amp;gt;
                &amp;lt;span class=&quot;cd-date&quot; id=&quot;eventDate&quot;&amp;gt;&amp;lt;/span&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div id=&quot;countRight&quot; class=&quot;cd-count-right&quot;&amp;gt;
                &amp;lt;div id=&quot;countRight&quot; class=&quot;cd-count-right&quot;&amp;gt;
                    &amp;lt;div class=&quot;cd-count-item&quot;&amp;gt;
                        &amp;lt;div class=&quot;cd-item-name&quot;&amp;gt;今日&amp;lt;/div&amp;gt;
                        &amp;lt;div class=&quot;cd-item-progress&quot;&amp;gt;&amp;lt;/div&amp;gt;
                    &amp;lt;/div&amp;gt;
                    &amp;lt;div class=&quot;cd-count-item&quot;&amp;gt;
                        &amp;lt;div class=&quot;cd-item-name&quot;&amp;gt;本周&amp;lt;/div&amp;gt;
                        &amp;lt;div class=&quot;cd-item-progress&quot;&amp;gt;&amp;lt;/div&amp;gt;
                    &amp;lt;/div&amp;gt;
                    &amp;lt;div class=&quot;cd-count-item&quot;&amp;gt;
                        &amp;lt;div class=&quot;cd-item-name&quot;&amp;gt;本月&amp;lt;/div&amp;gt;
                        &amp;lt;div class=&quot;cd-item-progress&quot;&amp;gt;&amp;lt;/div&amp;gt;
                    &amp;lt;/div&amp;gt;
                    &amp;lt;div class=&quot;cd-count-item&quot;&amp;gt;
                        &amp;lt;div class=&quot;cd-item-name&quot;&amp;gt;本年&amp;lt;/div&amp;gt;
                        &amp;lt;div class=&quot;cd-item-progress&quot;&amp;gt;&amp;lt;/div&amp;gt;
                    &amp;lt;/div&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;2、 countdown-1.js&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const CountdownTimer = (() =&amp;gt; {
    const config = {
        targetDate: &quot;2025-10-01&quot;,
        targetName: &quot;国庆&quot;,
        units: {
            day: { text: &quot;今日&quot;, unit: &quot;小时&quot; },
            week: { text: &quot;本周&quot;, unit: &quot;天&quot; },
            month: { text: &quot;本月&quot;, unit: &quot;天&quot; },
            year: { text: &quot;本年&quot;, unit: &quot;天&quot; }
        }
    };

    const calculators = {
        day: () =&amp;gt; {
            const hours = new Date().getHours();
            return {
                remaining: 24 - hours,
                percentage: (hours / 24) * 100
            };
        },
        week: () =&amp;gt; {
            const day = new Date().getDay();
            const passed = day === 0 ? 6 : day - 1;
            return {
                remaining: 6 - passed,
                percentage: ((passed + 1) / 7) * 100
            };
        },
        month: () =&amp;gt; {
            const now = new Date();
            const total = new Date(now.getFullYear(), now.getMonth() + 1, 0).getDate();
            const passed = now.getDate() - 1;
            return {
                remaining: total - passed,
                percentage: (passed / total) * 100
            };
        },
        year: () =&amp;gt; {
            const now = new Date();
            const start = new Date(now.getFullYear(), 0, 1);
            const total = 365 + (now.getFullYear() % 4 === 0 ? 1 : 0);
            const passed = Math.floor((now - start) / 86400000);
            return {
                remaining: total - passed,
                percentage: (passed / total) * 100
            };
        }
    };

    function updateCountdown() {
        const elements = [&apos;eventName&apos;, &apos;eventDate&apos;, &apos;daysUntil&apos;, &apos;countRight&apos;]
           .map(id =&amp;gt; document.getElementById(id));

        if (elements.some(el =&amp;gt; !el)) return;

        const [eventName, eventDate, daysUntil, countRight] = elements;
        const now = new Date();
        const target = new Date(config.targetDate);

        eventName.textContent = config.targetName;
        eventDate.textContent = config.targetDate;
        daysUntil.textContent = Math.round((target - now.setHours(0, 0, 0, 0)) / 86400000);

        countRight.innerHTML = Object.entries(config.units)
           .map(([key, { text, unit }]) =&amp;gt; {
                const { remaining, percentage } = calculators[key]();
                return `
                    &amp;lt;div class=&quot;cd-count-item&quot;&amp;gt;
                        &amp;lt;div class=&quot;cd-item-name&quot;&amp;gt;${text}&amp;lt;/div&amp;gt;
                        &amp;lt;div class=&quot;cd-item-progress&quot;&amp;gt;
                            &amp;lt;div class=&quot;cd-progress-bar&quot; style=&quot;width: ${percentage}%; opacity: ${percentage}&quot;&amp;gt;&amp;lt;/div&amp;gt;
                            &amp;lt;span class=&quot;cd-percentage ${percentage &amp;gt;= 46 ? &apos;cd-many&apos; : &apos;&apos;}&quot;&amp;gt;${percentage.toFixed(2)}%&amp;lt;/span&amp;gt;
                            &amp;lt;span class=&quot;cd-remaining ${percentage &amp;gt;= 60 ? &apos;cd-many&apos; : &apos;&apos;}&quot;&amp;gt;
                                &amp;lt;span class=&quot;cd-tip&quot;&amp;gt;还剩&amp;lt;/span&amp;gt;${remaining}&amp;lt;span class=&quot;cd-tip&quot;&amp;gt;${unit}&amp;lt;/span&amp;gt;
                            &amp;lt;/span&amp;gt;
                        &amp;lt;/div&amp;gt;
                    &amp;lt;/div&amp;gt;
                `;
            }).join(&apos;&apos;);
    }

    let timer;
    const start = () =&amp;gt; {
        updateCountdown();
        timer = setInterval(updateCountdown, 600000);
    };

    [&apos;pjax:complete&apos;, &apos;DOMContentLoaded&apos;].forEach(event =&amp;gt; document.addEventListener(event, start));
    document.addEventListener(&apos;pjax:send&apos;, () =&amp;gt; timer &amp;amp;&amp;amp; clearInterval(timer));

    return { start, stop: () =&amp;gt; timer &amp;amp;&amp;amp; clearInterval(timer) };
})();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;优化后代码，实现倒计时包含多个时间，自动识别最近的期望时间，如果现在时间超过了所有的期望时间，就以最后一个期望时间为准。两个js二选一即可。   &lt;br /&gt;
 countdown-2.js&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const CountdownTimer = (() =&amp;gt; {
    const config = {
        events: [
            { targetDate: &quot;2025-04-04&quot;, targetName: &quot;清明节&quot; },
            { targetDate: &quot;2025-05-01&quot;, targetName: &quot;劳动节&quot; },
            { targetDate: &quot;2025-05-31&quot;, targetName: &quot;端午节&quot; },
            { targetDate: &quot;2025-10-01&quot;, targetName: &quot;国庆节&quot; },    
            { targetDate: &quot;2026-02-17&quot;, targetName: &quot;春节&quot; }            
        ],
        units: {
            day: { text: &quot;今日&quot;, unit: &quot;小时&quot; },
            week: { text: &quot;本周&quot;, unit: &quot;天&quot; },
            month: { text: &quot;本月&quot;, unit: &quot;天&quot; },
            year: { text: &quot;本年&quot;, unit: &quot;天&quot; }
        }
    };

    const calculators = {
        day: () =&amp;gt; {
            const hours = new Date().getHours();
            return {
                remaining: 24 - hours,
                percentage: (hours / 24) * 100
            };
        },
        week: () =&amp;gt; {
            const day = new Date().getDay();
            const passed = day === 0 ? 6 : day - 1;
            return {
                remaining: 6 - passed,
                percentage: ((passed + 1) / 7) * 100
            };
        },
        month: () =&amp;gt; {
            const now = new Date();
            const total = new Date(now.getFullYear(), now.getMonth() + 1, 0).getDate();
            const passed = now.getDate() - 1;
            return {
                remaining: total - passed,
                percentage: (passed / total) * 100
            };
        },
        year: () =&amp;gt; {
            const now = new Date();
            const start = new Date(now.getFullYear(), 0, 1);
            const total = 365 + (now.getFullYear() % 4 === 0 ? 1 : 0);
            const passed = Math.floor((now - start) / 86400000);
            return {
                remaining: total - passed,
                percentage: (passed / total) * 100
            };
        }
    };

    function getNextEvent() {
        const now = new Date();
        for (let i = 0; i &amp;lt; config.events.length; i++) {
            const eventDate = new Date(config.events[i].targetDate);
            if (eventDate &amp;gt; now) {
                return config.events[i];
            }
        }
        return config.events[config.events.length - 1];
    }

    function updateCountdown() {
        const elements = [&apos;eventName&apos;, &apos;eventDate&apos;, &apos;daysUntil&apos;, &apos;countRight&apos;]
           .map(id =&amp;gt; document.getElementById(id));

        if (elements.some(el =&amp;gt; !el)) return;

        const [eventName, eventDate, daysUntil, countRight] = elements;
        const now = new Date();
        const nextEvent = getNextEvent();
        const target = new Date(nextEvent.targetDate);

        eventName.textContent = nextEvent.targetName;
        eventDate.textContent = nextEvent.targetDate;
        daysUntil.textContent = Math.round((target - now.setHours(0, 0, 0, 0)) / 86400000);

        countRight.innerHTML = Object.entries(config.units)
           .map(([key, { text, unit }]) =&amp;gt; {
                const { remaining, percentage } = calculators[key]();
                return `
                    &amp;lt;div class=&quot;cd-count-item&quot;&amp;gt;
                        &amp;lt;div class=&quot;cd-item-name&quot;&amp;gt;${text}&amp;lt;/div&amp;gt;
                        &amp;lt;div class=&quot;cd-item-progress&quot;&amp;gt;
                            &amp;lt;div class=&quot;cd-progress-bar&quot; style=&quot;width: ${percentage}%; opacity: ${percentage}&quot;&amp;gt;&amp;lt;/div&amp;gt;
                            &amp;lt;span class=&quot;cd-percentage ${percentage &amp;gt;= 46 ? &apos;cd-many&apos; : &apos;&apos;}&quot;&amp;gt;${percentage.toFixed(2)}%&amp;lt;/span&amp;gt;
                            &amp;lt;span class=&quot;cd-remaining ${percentage &amp;gt;= 60 ? &apos;cd-many&apos; : &apos;&apos;}&quot;&amp;gt;
                                &amp;lt;span class=&quot;cd-tip&quot;&amp;gt;还剩&amp;lt;/span&amp;gt;${remaining}&amp;lt;span class=&quot;cd-tip&quot;&amp;gt;${unit}&amp;lt;/span&amp;gt;
                            &amp;lt;/span&amp;gt;
                        &amp;lt;/div&amp;gt;
                    &amp;lt;/div&amp;gt;
                `;
            }).join(&apos;&apos;);
    }

    let timer;
    const start = () =&amp;gt; {
        updateCountdown();
        timer = setInterval(updateCountdown, 600000);
    };

    [&apos;pjax:complete&apos;, &apos;DOMContentLoaded&apos;].forEach(event =&amp;gt; document.addEventListener(event, start));
    document.addEventListener(&apos;pjax:send&apos;, () =&amp;gt; timer &amp;amp;&amp;amp; clearInterval(timer));

    return { start, stop: () =&amp;gt; timer &amp;amp;&amp;amp; clearInterval(timer) };
})();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;3、 style.css&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/*倒计时*/
.countdownNav {
    margin-top: 1em;
    background-color: var(--box-color-light);
    -moz-border-radius: 10px;
    -webkit-border-radius: 10px;
    overflow: hidden;
    width: 100%;
}
.card-countdown {
    margin: 0.75em 1.5em;
}

.card-countdown .item-content {
    display: flex;
}

.cd-count-left {
    position: relative;
    display: flex;
    flex-direction: column;
    margin-right: 0.8rem;
    line-height: 1.5;
    align-items: center;
    justify-content: center;
}

.cd-count-left .cd-text {
    font-size: 14px;
}

.cd-count-left .cd-name {
    font-weight: bold;
    font-size: 18px;
}

.cd-count-left .cd-time {
    font-size: 30px;
    font-weight: bold;
    color: #dad9e6;
}

.cd-count-left .cd-date {
    font-size: 12px;
    opacity: 0.6;
}

.cd-count-left::after {
    content: &quot;&quot;;
    position: absolute;
    right: -0.8rem;
    width: 2px;
    height: 80%;
    background-color: #dad9e6;
    opacity: 0.5;
}

.cd-count-right {
    flex: 1;
    margin-left: .8rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.cd-count-item {
    display: flex;
    flex-direction: row;
    align-items: center;
    height: 24px;
}

.cd-item-name {
    font-size: 14px;
    margin-right: 0.8rem;
    white-space: nowrap;
}

.cd-item-progress {
    position: relative;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    height: 100%;
    width: 100%;
    border-radius: 8px;
    background-color: var(--background-color-light);
    overflow: hidden;
}

.cd-progress-bar {
    height: 100%;
    border-radius: 8px;
    background-color: #dad9e6;
}

.cd-percentage,
.cd-remaining {
    position: absolute;
    font-size: 12px;
    margin: 0 6px;
    transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
}

.cd-many {
    color: #fff;
}

.cd-remaining {
    opacity: 0;
    transform: translateX(10px);
}

.card-countdown .item-content:hover .cd-remaining {
    transform: translateX(0);
    opacity: 1;
}

.card-countdown .item-content:hover .cd-percentage {
    transform: translateX(-10px);
    opacity: 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        </item>
      
    
      
        <item>
          <title>友链自动监测</title>
          <link>https://gorpeln.top/article/17310530239</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17310530239</guid>
          
          
          
          
          
          
          <pubDate>Fri, 08 Nov 2024 16:03:43 +0800</pubDate>
          <description>&lt;h3 id=&quot;前言&quot;&gt;前言&lt;/h3&gt;
&lt;p&gt;管理友链时采取手动点击检验的方式，随着时间的推移，友链数量逐渐增加，这一做法显然已不再高效。于是就需要写了一项类似API的功能，输出所有友链数据的可达性。&lt;/p&gt;

&lt;h3 id=&quot;功能概览&quot;&gt;功能概览&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;github action自动定时检测友链状态，结果输出到page分支下的result.json。&lt;/li&gt;
  &lt;li&gt;友链状态展示页面，可以部署到zeabur或者vercel，加速api访问速度。&lt;/li&gt;
  &lt;li&gt;为确保兼容性，实现了两种检测方案：
    &lt;ul&gt;
      &lt;li&gt;非兼容：使用格式文件动态读取友链内容，实现功能，友链列表自动实时性更新。&lt;/li&gt;
      &lt;li&gt;兼容：使用TXT存储所有友链信息，兼容性好，适合所有站点，但是添加友链后可能需要手动更新文件。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;API访问数据，api包含数据包括可达链接、不可达链接、可达链接数目、不可达链接数目、更新时间戳，其中链接中包含站点名称和地址，便于前端部署。&lt;/li&gt;
  &lt;li&gt;测试脚本使用python，使用Request包的get和head两种检测方式检测，尽可能减少误判概率。&lt;/li&gt;
  &lt;li&gt;前端采用本地缓存，减少api调用次数，缓存半个小时刷新，不影响实时性。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;预览&quot;&gt;预览&lt;/h3&gt;
&lt;p&gt;博客中预览：&lt;a href=&quot;https://friends.202090.xyz/&quot;&gt;https://friends.gorpeln.top/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20241108160343641.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20241108160343641&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;其他&quot;&gt;其他&lt;/h3&gt;
&lt;p&gt;部署教程：参考文章尾部的参考链接   &lt;br /&gt;
友链相关的&lt;a href=&quot;/links#problem&quot;&gt;常见问题&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
      
    
      
    
      
        <item>
          <title>定期自动备份又拍云存储</title>
          <link>https://gorpeln.top/article/17280983368</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17280983368</guid>
          
          
          
          
          
          
          <pubDate>Sat, 05 Oct 2024 11:18:56 +0800</pubDate>
          <description>&lt;h3 id=&quot;前言&quot;&gt;前言&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;数据无价，备份无忧。&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;将其他平台数据备份到不同平台的好处：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;增强数据安全性&lt;/strong&gt;：通过定期备份到GitHub，即使又拍云服务出现问题，你的数据仍然安全。这为你的数据提供了额外的一层保护，尤其是使用&lt;strong&gt;国内免费服务&lt;/strong&gt;的用户。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;便于版本管理&lt;/strong&gt;：GitHub支持Git版本控制系统，这意味着你可以轻松追踪数据的变化历史，这对于需要保存多个版本的数据集或文档非常有用。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;自动化操作&lt;/strong&gt;：使用GitHub Actions，你可以设置自动化的工作流来定期执行备份脚本。这不仅减少了手动操作的需求，还降低了人为错误的风险。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;成本效益&lt;/strong&gt;：对于小规模项目或个人开发者来说，使用GitHub作为备份存储可能比租用额外的云存储空间更经济。特别是当使用GitHub的免费层级时。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;易于访问和分享&lt;/strong&gt;：GitHub上的数据可以通过简单的链接分享给他人，这对于公开数据集或开源项目尤其有益。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;预览&quot;&gt;预览&lt;/h3&gt;
&lt;p&gt;又拍云目录：
&lt;img src=&quot;https://img.gorpeln.top/blog/20241005111856740.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20241005111856740&quot; /&gt;&lt;/p&gt;

&lt;p&gt;github目录：
&lt;img src=&quot;https://img.gorpeln.top/blog/20241005111856741.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20241005111856741&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;操作示例&quot;&gt;操作示例&lt;/h3&gt;
&lt;h4 id=&quot;1-新增-workflow-yml-文件&quot;&gt;1. 新增 Workflow YML 文件&lt;/h4&gt;
&lt;p&gt;upyun_images_sync/.github/workflows/sync-images.yml&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;name: Sync Images from UpYun to GitHub

on:
  schedule:
    - cron: &apos;0 0 * * 3&apos;  # 每周三凌晨 0 点运行
  workflow_dispatch:  # 允许手动触发

jobs:
  sync-images:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: &apos;3.x&apos;

    - name: Install dependencies
      run: |
        pip install gitpython

    - name: Run sync script
      env:
        UPYUN_FTP_HOST: $
        UPYUN_FTP_USER: $
        UPYUN_FTP_PASSWORD: $
        UPYUN_FTP_PATH: $
        LOCAL_DOWNLOAD_PATH: ./tmp
        REPO_PATH: ./repo
        GH_TOKEN: $
        REPO_OWNER: $
        REPO_NAME: $
        BRANCH_NAME: $
      run: |
        python3 sync_images.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;2-新建-python-同步脚本&quot;&gt;2. 新建 Python 同步脚本&lt;/h4&gt;
&lt;p&gt;upyun_images_sync/sync_images.py&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

import os
from ftplib import FTP
import git
import shutil

class MyFTP:
    def __init__(self, host, port=21):
        self.host = host
        self.port = port
        self.ftp = FTP()
        self.ftp.encoding = &apos;utf8&apos;
        self.file_list = []

    def login(self, username, password):
        try:
            self.ftp.connect(self.host, self.port)
            self.ftp.login(username, password)
            print(f&quot;成功登录到 {self.host}&quot;)
            print(f&quot;当前工作目录: {self.ftp.pwd()}&quot;)
        except Exception as err:
            print(f&quot;FTP 连接或登录失败，错误描述为：{err}&quot;)
            sys.exit(1)

    def download_file(self, local_file, remote_file):
        if os.path.exists(local_file):
            print(f&quot;{local_file} 已存在，跳过下载&quot;)
            return
        try:
            print(f&quot;下载文件 {remote_file} 到 {local_file}&quot;)
            buf_size = 1024
            with open(local_file, &apos;wb&apos;) as file_handler:
                self.ftp.retrbinary(f&apos;RETR {remote_file}&apos;, file_handler.write, buf_size)
        except Exception as err:
            print(f&quot;下载文件出错，出现异常：{err}&quot;)

    def download_file_tree(self, local_path, remote_path):
        try:
            print(f&quot;尝试切换到远程目录: {remote_path}&quot;)
            self.ftp.cwd(remote_path)
            print(f&quot;成功切换到远程目录: {remote_path}&quot;)
        except Exception as err:
            print(f&quot;远程目录 {remote_path} 不存在，继续... 具体错误描述为：{err}&quot;)
            return

        if not os.path.isdir(local_path):
            os.makedirs(local_path)
            print(f&quot;创建本地目录 {local_path}&quot;)

        print(f&quot;当前工作目录: {self.ftp.pwd()}&quot;)

        # 列出目录内容
        remote_files = self.ftp.nlst()
        print(f&quot;远程目录内容: {remote_files}&quot;)

        for remote_file in remote_files:
            local = os.path.join(local_path, remote_file)
            if remote_file in [&apos;.&apos;, &apos;..&apos;]:
                continue
            try:
                self.ftp.cwd(remote_file)
                print(f&quot;下载目录：{remote_file}&quot;)
                self.download_file_tree(local, os.path.join(remote_path, remote_file))
                self.ftp.cwd(&quot;..&quot;)
            except Exception:
                print(f&quot;下载文件：{remote_file}&quot;)
                self.download_file(local, os.path.join(remote_path, remote_file))

    def close(self):
        print(&quot;FTP退出&quot;)
        self.ftp.quit()

def sync_to_github(repo_path, branch_name):
    if os.path.exists(repo_path):
        shutil.rmtree(repo_path)
    os.makedirs(repo_path)

    repo_url = f&quot;https://{GH_TOKEN}@github.com/{REPO_OWNER}/{REPO_NAME}.git&quot;
    print(f&quot;克隆仓库: {repo_url}&quot;)
    try:
        repo = git.Repo.clone_from(repo_url, repo_path, branch=branch_name)
        print(f&quot;克隆仓库到 {repo_path}&quot;)
    except git.exc.GitCommandError as e:
        print(f&quot;克隆仓库失败: {e}&quot;)
        return

    images_dir = os.path.join(repo_path, &apos;images&apos;)
    if not os.path.exists(images_dir):
        os.makedirs(images_dir)

    shutil.copytree(LOCAL_DOWNLOAD_PATH, images_dir, dirs_exist_ok=True)
    print(f&quot;复制文件到 {images_dir}&quot;)

    repo.git.add(all=True)
    if repo.is_dirty():
        repo.index.commit(&quot;Sync images from UpYun&quot;)
        origin = repo.remote(name=&apos;origin&apos;)
        origin.push()
        print(&quot;推送更改到 GitHub 仓库&quot;)
    else:
        print(&quot;没有更改需要提交&quot;)

if __name__ == &quot;__main__&quot;:
    # 从环境变量中读取配置
    UPYUN_FTP_HOST = os.getenv(&apos;UPYUN_FTP_HOST&apos;)
    UPYUN_FTP_USER = os.getenv(&apos;UPYUN_FTP_USER&apos;)
    UPYUN_FTP_PASSWORD = os.getenv(&apos;UPYUN_FTP_PASSWORD&apos;)
    UPYUN_FTP_PATH = os.getenv(&apos;UPYUN_FTP_PATH&apos;, &apos;/&apos;)
    LOCAL_DOWNLOAD_PATH = os.getenv(&apos;LOCAL_DOWNLOAD_PATH&apos;, &apos;./tmp&apos;)
    REPO_PATH = os.getenv(&apos;REPO_PATH&apos;, &apos;./repo&apos;)
    GH_TOKEN = os.getenv(&apos;GH_TOKEN&apos;)
    REPO_OWNER = os.getenv(&apos;REPO_OWNER&apos;)
    REPO_NAME = os.getenv(&apos;REPO_NAME&apos;)
    BRANCH_NAME = os.getenv(&apos;BRANCH_NAME&apos;, &apos;master&apos;)

    # 创建 FTP 对象
    my_ftp = MyFTP(UPYUN_FTP_HOST)
    # 登录 FTP 服务器
    my_ftp.login(UPYUN_FTP_USER, UPYUN_FTP_PASSWORD)
    
    # 下载目录
    my_ftp.download_file_tree(LOCAL_DOWNLOAD_PATH, UPYUN_FTP_PATH)
    
    # 关闭 FTP 连接
    my_ftp.close()

    # 同步到 GitHub
    sync_to_github(REPO_PATH, BRANCH_NAME)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;3-授予-workflow-读写权限&quot;&gt;3. 授予 Workflow 读写权限&lt;/h4&gt;
&lt;p&gt;将本地的项目提交到github，然后设置Workflow 读写权限&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20241005111856742.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20241005111856742&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;4-新增-secrets-变量&quot;&gt;4. 新增 Secrets 变量&lt;/h4&gt;
&lt;p&gt;在github上设置Secrets 变量&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20241005111856743.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20241005111856743&quot; /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;序号&lt;/th&gt;
      &lt;th&gt;变量名&lt;/th&gt;
      &lt;th&gt;释义&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;UPYUN_FTP_HOST&lt;/td&gt;
      &lt;td&gt;又拍云 FTP 主机地址&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;UPYUN_FTP_USER&lt;/td&gt;
      &lt;td&gt;又拍云 FTP 用户名&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;UPYUN_FTP_PASSWORD&lt;/td&gt;
      &lt;td&gt;又拍云 FTP 密码&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;UPYUN_FTP_PATH&lt;/td&gt;
      &lt;td&gt;又拍云 FTP 路径&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;GH_TOKEN&lt;/td&gt;
      &lt;td&gt;GitHub 个人访问令牌&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;REPO_OWNER&lt;/td&gt;
      &lt;td&gt;仓库所有者&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;REPO_NAME&lt;/td&gt;
      &lt;td&gt;仓库名称&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;BRANCH_NAME&lt;/td&gt;
      &lt;td&gt;分支名称（默认为 master）&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;变量详解：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UPYUN_FTP_HOST&lt;/code&gt;：参考&lt;a href=&quot;https://help.upyun.com/2015/12/28/%e5%a6%82%e4%bd%95%e4%bd%bf%e7%94%a8-ftp%e3%80%81api-%e4%b8%8a%e4%bc%a0%e6%96%87%e4%bb%b6/&quot;&gt;又拍云文档&lt;/a&gt;，直接使用&lt;code class=&quot;language-plaintext color-gray highlighter-rouge&quot;&gt;v0.ftp.upyun.com&lt;/code&gt;就行了&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UPYUN_FTP_USER&lt;/code&gt;：格式为 &lt;strong&gt;operator/bucket&lt;/strong&gt;，在又拍云 - 云存储 - 选择对应的bucket点击配置 - 存储管理 - 操作员授权 - 自己添加操作用户名和密码，假设你的又拍云云储存bucket的名称为upai-img，自定义的用户名为user，密码为123456，则UPYUN_FTP_USER就是 &lt;code class=&quot;language-plaintext color-gray highlighter-rouge&quot;&gt;user/upai-img&lt;/code&gt;，如果你看不懂我说的，参考&lt;a href=&quot;https://techs.upyun.com/videos/cdnpage/creating_storage.html&quot;&gt; 又拍云视频教程&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UPYUN_FTP_PASSWORD&lt;/code&gt;：就是上面你自己设置的 &lt;code class=&quot;language-plaintext color-gray highlighter-rouge&quot;&gt;123456&lt;/code&gt;，&lt;a href=&quot;https://img.gorpeln.top/blog/20241005111856744.png!gorpeln&quot;&gt;图片示例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UPYUN_FTP_PATH&lt;/code&gt;：直接使用 &lt;code class=&quot;language-plaintext color-gray highlighter-rouge&quot;&gt;/&lt;/code&gt; （根目录）就行了&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GH_TOKEN&lt;/code&gt;：选择github的 Settings - 点击右侧列表最下面的 Developer Settings - Personal access tokens - tokens (classic) - Generated new token (classic)，Note名字可以随意，Expiration时间选择 no Expiration,下面权限全选了，点击Generated token 就生成了想要的token，记得保存，他只显示一次，示例：&lt;code class=&quot;language-plaintext color-gray highlighter-rouge&quot;&gt;abc_123456789pUS123454321WmJkE987654321&lt;/code&gt;，&lt;a href=&quot;https://img.gorpeln.top/blog/20241005111856745.png!gorpeln&quot;&gt;图片示例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;REPO_OWNER&lt;/code&gt;：就是你的github的用户名，我在github给这个项目创建仓库为https://github.com/gorpeln/upyun_images_sync，示例：&lt;code class=&quot;language-plaintext color-gray highlighter-rouge&quot;&gt;gorpeln&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;REPO_NAME&lt;/code&gt;：仓库链接后面的就是仓库名，示例：&lt;code class=&quot;language-plaintext color-gray highlighter-rouge&quot;&gt;upyun_images_sync&lt;/code&gt;，&lt;a href=&quot;https://img.gorpeln.top/blog/20241005111856746.png!gorpeln&quot;&gt;图片示例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BRANCH_NAME&lt;/code&gt;：项目分支名，一般为master/main，示例：&lt;code class=&quot;language-plaintext color-gray highlighter-rouge&quot;&gt;master&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
      
    
      
        <item>
          <title>博客常见问题</title>
          <link>https://gorpeln.top/article/17265361548</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17265361548</guid>
          
          
          
          
          
          
          <pubDate>Tue, 17 Sep 2024 09:22:34 +0800</pubDate>
          <description>
&lt;div id=&quot;blog-problem&quot;&gt;
    &lt;p id=&quot;blog-problem-title&quot;&gt;博客目标？&lt;/p&gt;
    &lt;p id=&quot;blog-problem-des&quot;&gt;简洁、高效&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;blog-problem&quot;&gt;
    &lt;p id=&quot;blog-problem-title&quot;&gt;如何联系博主？&lt;/p&gt;
    &lt;p id=&quot;blog-problem-des&quot;&gt;可以通过 页面留言 或 邮件 联系博主&lt;text class=&quot;problems-detail-light&quot;&gt;（ 注意将邮件地址中的*替换掉 ）&lt;/text&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;blog-problem&quot;&gt;
    &lt;p id=&quot;blog-problem-title&quot;&gt;评论加载不出来？&lt;/p&gt;
    &lt;p id=&quot;blog-problem-des&quot;&gt;博客已开启CDN，整体访问速度较快&lt;br /&gt;但博客评论、公告、实验室等功能采用不同域名访问，可能存在无法访问的情况&lt;br /&gt;如果可以，请科学上网，或者多次刷新加载&lt;text class=&quot;problems-detail-light&quot;&gt;（5-6次）&lt;/text&gt;，就可以正常展示&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;blog-problem&quot;&gt;
    &lt;p id=&quot;blog-problem-title&quot;&gt;为什么看到博客更新时间总是更新，但是具体博文却没见更新呢？&lt;/p&gt;
    &lt;p id=&quot;blog-problem-des&quot;&gt;一方面，博客开启了CDN，最新内容有一定的延时&lt;br /&gt;另一方面，博客中的一些内容仅限个人查看，并不会公开展示&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;blog-problem&quot;&gt;
    &lt;p id=&quot;blog-problem-title&quot;&gt;博客使用的什么主题？&lt;/p&gt;
    &lt;p id=&quot;blog-problem-des&quot;&gt;本博客没有使用任何主题，是博主根据自己喜好和技术能力编写的&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;blog-problem&quot;&gt;
    &lt;p id=&quot;blog-problem-title&quot;&gt;如何快速滑动到最底部或最顶部？&lt;/p&gt;
    &lt;p id=&quot;blog-problem-des&quot;&gt;电脑端 双击向下按键快速到底部，双击向上按键快速到顶部，或点击页面右侧按键操作&lt;br /&gt;手机端 向上或向下滑过菜单按钮实现快速到页面顶部和底部&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;blog-problem&quot;&gt;
    &lt;p id=&quot;blog-problem-title&quot;&gt;博客版本号？&lt;/p&gt;
    &lt;p id=&quot;blog-problem-des&quot;&gt;当前博客版本号为：&lt;text class=&quot;problems-version-detail problems-detail-strong&quot;&gt;x.x.x&lt;/text&gt;&lt;br /&gt;第一位为博客大版本号；第二位为博客运行年份；第三位为年度内提交修改次数，具体数值动态变化&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;blog-problem&quot;&gt;
    &lt;p id=&quot;blog-problem-title&quot;&gt;博客成长记录？&lt;/p&gt;
    &lt;p id=&quot;blog-problem-des&quot;&gt;&lt;a href=&quot;/record&quot; target=&quot;_blank&quot;&gt;查看博客成长记录&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;blog-problem&quot;&gt;
    &lt;p id=&quot;blog-problem-title&quot;&gt;友链相关问题？&lt;/p&gt;
    &lt;p id=&quot;blog-problem-des&quot;&gt;&lt;a href=&quot;/links#problem&quot; target=&quot;_blank&quot;&gt;查看友链相关问题&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;blog-problem&quot;&gt;
    &lt;p id=&quot;blog-problem-title&quot;&gt;博客相关协议？&lt;/p&gt;
    &lt;p id=&quot;blog-problem-des&quot;&gt;&lt;a href=&quot;/help/agreements&quot; target=&quot;_blank&quot;&gt;查看博客相关协议&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;blog-problem&quot;&gt;
    &lt;p id=&quot;blog-problem-title&quot;&gt;其他问题？&lt;/p&gt;
    &lt;p id=&quot;blog-problem-des&quot;&gt;正在整理中...&lt;/p&gt;
&lt;/div&gt;

&lt;script&gt;
document.addEventListener(&apos;DOMContentLoaded&apos;, function() {
    const elements = document.querySelectorAll(&apos;.problems-version-detail&apos;);
    elements.forEach(function(element) {
        element.textContent = &apos;4.9.97&apos;;
    });
});       
&lt;/script&gt;

</description>
        </item>
      
    
      
        <item>
          <title>防止网站被恶意镜像</title>
          <link>https://gorpeln.top/article/17245056864</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17245056864</guid>
          
          
          
          
          
          
          <pubDate>Sat, 24 Aug 2024 21:21:26 +0800</pubDate>
          <description>&lt;h3 id=&quot;什么是网站镜像&quot;&gt;什么是网站镜像？&lt;/h3&gt;
&lt;p&gt;网站镜像是指在互联网上出现一个与你的网站几乎一模一样的复制品，除了域名不同之外，其它所有内容都完全相同。这包括网站的布局、LOGO、版块结构等。&lt;/p&gt;

&lt;p&gt;通常，网站被恶意镜像的情况主要有两种：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;完全镜像：这种情况是创建一个与您网站内容完全相同的站点，除了网址不同，其他一切都模仿您的设计和内容。&lt;/li&gt;
  &lt;li&gt;内容抓取：这种情况常见于博彩网站，它们会恶意抓取您的网页内容，正常浏览时隐藏掉原有内容，显示的却是他们自己的广告。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20240824212126440.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20240824212126440&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在上述例子中，明显属于第一种情况：对方镜像了我的网站布局和结构。这种行为属于灰色 SEO 和黑帽 SEO 手法，目的是为了借助我博客的权重和流量来提升他们自己网站的排名。 
&lt;img src=&quot;https://img.gorpeln.top/blog/20240824212126441.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20240824212126441&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;网站被镜像危害&quot;&gt;网站被镜像危害&lt;/h3&gt;
&lt;p&gt;从搜索引擎来讲，会对搜索引擎抓取不利，影响原本网站的正常抓取和识别，可能会导致原网站权重丢失，也有可能带来一定的误伤，搜索引擎会对网站进行识别，如果发现是镜像站，会导致网站被搜索引擎屏蔽，将失去搜索引擎带来的流量（这对个人博客来说是致命的）。&lt;/p&gt;

&lt;p&gt;对用户来讲，可能会被镜像网站欺骗，恶意广告插播或欺诈内容造成用户损失。&lt;/p&gt;

&lt;h3 id=&quot;网站被镜像了怎么办&quot;&gt;网站被镜像了怎么办&lt;/h3&gt;
&lt;h4 id=&quot;添加防镜像跳转代码&quot;&gt;添加防镜像跳转代码&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;zh&quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;
&amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&amp;gt;
&amp;lt;title&amp;gt;not mirroring&amp;lt;/title&amp;gt;
&amp;lt;style&amp;gt;
    .alert-message {
        position: fixed;
        top: 45%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #f8d7da;
        color: #721c24;
        padding: 20px;
        z-index: 10000;
        opacity: 1;
        transition: opacity 3s;
        border-radius:16px;
    }
    .alert-message.fade-out {
        opacity: 0;
    }
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;script&amp;gt;
(function () {
    // 定义合法域名列表并Base64编码
    var validDomains = [&apos;Z29ycGVsbi50b3A=&apos;]; // gorpeln.top
    var redirectUrl = &apos;aHR0cHM6Ly9nb3JwZWxuLnRvcA==&apos;; // https://gorpeln.top
    var hostname = document.location.hostname + (document.location.port ? &apos;:&apos; + document.location.port : &apos;&apos;);

    function createWatermark(text) {
        var watermarkDiv = document.createElement(&apos;div&apos;);
        watermarkDiv.style.pointerEvents = &apos;none&apos;;
        watermarkDiv.style.position = &apos;fixed&apos;;
        watermarkDiv.style.top = &apos;0&apos;;
        watermarkDiv.style.left = &apos;-5%&apos;;
        watermarkDiv.style.width = &apos;110%&apos;;
        watermarkDiv.style.height = &apos;100%&apos;;
        watermarkDiv.style.zIndex = &apos;9999&apos;;
        watermarkDiv.style.opacity = &apos;0.1&apos;;
        watermarkDiv.style.background = &apos;transparent&apos;;
        watermarkDiv.style.overflow = &apos;hidden&apos;;
        watermarkDiv.style.display = &apos;flex&apos;;
        watermarkDiv.style.justifyContent = &apos;center&apos;;
        watermarkDiv.style.alignItems = &apos;center&apos;;
        watermarkDiv.style.flexWrap = &apos;wrap&apos;;

        var watermarkText = document.createElement(&apos;div&apos;);
        watermarkText.innerText = text;
        watermarkText.style.color = &apos;black&apos;;
        watermarkText.style.fontSize = &apos;30px&apos;;
        watermarkText.style.transform = &apos;rotate(-30deg)&apos;;
        watermarkText.style.whiteSpace = &apos;nowrap&apos;;
        watermarkText.style.margin = &apos;80px&apos;;

        for (var i = 0; i &amp;lt; 100; i++) {
            watermarkDiv.appendChild(watermarkText.cloneNode(true));
        }

        document.body.appendChild(watermarkDiv);
    }

    function showAlertMessage(message) {
        var alertMessage = document.createElement(&apos;div&apos;);
        alertMessage.className = &apos;alert-message&apos;;
        alertMessage.innerText = message;

        document.body.appendChild(alertMessage);

        // 3秒后添加fade-out类，使消息淡出
        setTimeout(function() {
            alertMessage.classList.add(&apos;fade-out&apos;);

            // 再等1秒（总共4秒）后删除元素
            setTimeout(function() {
                if (alertMessage.parentNode) {
                    alertMessage.parentNode.removeChild(alertMessage);
                }
            }, 200);
        }, 3000);

        // 5秒后跳转
        setTimeout(function() {
            window.location.replace(atob(redirectUrl));
        }, 5000);
    }

    // 检查当前域名是否在合法域名列表中
    if (!validDomains.includes(btoa(hostname))) {
        createWatermark(atob(validDomains[0])); // 使用合法域名列表中的第一个元素 
        showAlertMessage(&quot;警告：你当前浏览的页面非官方页面，可能存在有害信息！将在5秒后为你跳转至官方页面进行浏览！&quot;);
    }
})();
&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;代码目的&quot;&gt;代码目的&lt;/h4&gt;
&lt;p&gt;这个代码的目的是，利用对方会无脑反代一切内容的机制，在所有页面内都插入检测 JS 代码，在网友访问时，检测当前域名是否为所设定自己博客的域名，如果不是所设定的博客域名则在网站背景中&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;嵌入带域名水印&lt;/code&gt;并使用 confirm() 打断页面渲染，并弹出&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;弹窗警示&lt;/code&gt;用户&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;自动跳转回源站&lt;/code&gt;。
并且使用 JavaScript 动态插入水印 div 并不设置 id，class 等标识，防止对方通过u正则表达式匹配删除特定 div 元素。&lt;/p&gt;

&lt;h4 id=&quot;代码升级&quot;&gt;代码升级&lt;/h4&gt;
&lt;p&gt;因为 JavaScript 仍然是以明文方式暴露在 HTML 中，有正则表达式匹配风险，所以如果对方使用正则表达式破坏水印 JavaScript，则会导致水印无法正常显示。反制方法也很简单：使用 JavaScript 混淆。&lt;/p&gt;

&lt;p&gt;这里推荐一个 GitHub 上一个项目：https://github.com/javascript-obfuscator/javascript-obfuscator，该项目可以对 JavaScript 进行混淆，官方也提供了一个在线工具：https://obfuscator.io/#code&lt;/p&gt;

&lt;p&gt;我们可以借此对水印部分的 JavaScript 进行混淆，防止对水印 JavaScript 部分进行正则表达式匹配破坏，上面代码经过中等级混淆后如下：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function _0x1244(_0x2e9cd0,_0x16f71d){var _0x2ccdb5=_0x2ccd();return _0x1244=function(_0x124436,_0x222862){_0x124436=_0x124436-0x1d3;var _0x36d7fe=_0x2ccdb5[_0x124436];return _0x36d7fe;},_0x1244(_0x2e9cd0,_0x16f71d);}function _0x2ccd(){var _0x519334=[&apos;4159181SScBxf&apos;,&apos;center&apos;,&apos;110%&apos;,&apos;pointerEvents&apos;,&apos;80px&apos;,&apos;left&apos;,&apos;fixed&apos;,&apos;parentNode&apos;,&apos;117310NCrasO&apos;,&apos;width&apos;,&apos;33428dRtpro&apos;,&apos;wrap&apos;,&apos;hostname&apos;,&apos;fade-out&apos;,&apos;background&apos;,&apos;flex&apos;,&apos;30px&apos;,&apos;85638ogEylA&apos;,&apos;none&apos;,&apos;black&apos;,&apos;0.1&apos;,&apos;flexWrap&apos;,&apos;location&apos;,&apos;opacity&apos;,&apos;transform&apos;,&apos;10FNisEK&apos;,&apos;whiteSpace&apos;,&apos;position&apos;,&apos;body&apos;,&apos;100%&apos;,&apos;createElement&apos;,&apos;rotate(-30deg)&apos;,&apos;port&apos;,&apos;transparent&apos;,&apos;hidden&apos;,&apos;36vpXQzg&apos;,&apos;1078040hBJRkh&apos;,&apos;overflow&apos;,&apos;4510488GmCyEv&apos;,&apos;display&apos;,&apos;div&apos;,&apos;1243HhykLg&apos;,&apos;294OWGOMk&apos;,&apos;alert-message&apos;,&apos;-5%&apos;,&apos;margin&apos;,&apos;cloneNode&apos;,&apos;justifyContent&apos;,&apos;appendChild&apos;,&apos;alignItems&apos;,&apos;fontSize&apos;,&apos;zIndex&apos;,&apos;警告：你当前浏览的页面非官方页面，可能存在有害信息！将在5秒后为你跳转至官方页面进行浏览！&apos;,&apos;add&apos;,&apos;4592382EinlGm&apos;,&apos;36cjOBwx&apos;,&apos;innerText&apos;,&apos;removeChild&apos;,&apos;5neLlLf&apos;,&apos;style&apos;,&apos;includes&apos;];_0x2ccd=function(){return _0x519334;};return _0x2ccd();}(function(_0x4df09c,_0x8f741a){var _0x8f2856=_0x1244,_0x22b1d8=_0x4df09c();while(!![]){try{var _0x5f3be6=-parseInt(_0x8f2856(0x1f2))/0x1*(parseInt(_0x8f2856(0x201))/0x2)+-parseInt(_0x8f2856(0x1e1))/0x3+-parseInt(_0x8f2856(0x20e))/0x4*(-parseInt(_0x8f2856(0x1e5))/0x5)+-parseInt(_0x8f2856(0x1f9))/0x6*(-parseInt(_0x8f2856(0x1d5))/0x7)+-parseInt(_0x8f2856(0x20c))/0x8*(-parseInt(_0x8f2856(0x20b))/0x9)+parseInt(_0x8f2856(0x1f0))/0xa*(parseInt(_0x8f2856(0x1d4))/0xb)+parseInt(_0x8f2856(0x1e2))/0xc*(-parseInt(_0x8f2856(0x1e8))/0xd);if(_0x5f3be6===_0x8f741a)break;else _0x22b1d8[&apos;push&apos;](_0x22b1d8[&apos;shift&apos;]());}catch(_0x3801aa){_0x22b1d8[&apos;push&apos;](_0x22b1d8[&apos;shift&apos;]());}}}(_0x2ccd,0xe404e),(function(){var _0x2a9a37=_0x1244,_0x3507a2=[&apos;Z29ycGVsbi50b3A=&apos;],_0x49805e=&apos;aHR0cHM6Ly9nb3JwZWxuLnRvcA==&apos;,_0x2e6736=document[&apos;location&apos;][_0x2a9a37(0x1f4)]+(document[_0x2a9a37(0x1fe)][_0x2a9a37(0x208)]?&apos;:&apos;+document[&apos;location&apos;][&apos;port&apos;]:&apos;&apos;);function _0xc49f33(_0x38600e){var _0x202c5e=_0x2a9a37,_0x2660f1=document[&apos;createElement&apos;](&apos;div&apos;);_0x2660f1[&apos;style&apos;][_0x202c5e(0x1eb)]=_0x202c5e(0x1fa),_0x2660f1[_0x202c5e(0x1e6)][_0x202c5e(0x203)]=_0x202c5e(0x1ee),_0x2660f1[&apos;style&apos;][&apos;top&apos;]=&apos;0&apos;,_0x2660f1[_0x202c5e(0x1e6)][_0x202c5e(0x1ed)]=_0x202c5e(0x1d7),_0x2660f1[&apos;style&apos;][_0x202c5e(0x1f1)]=_0x202c5e(0x1ea),_0x2660f1[&apos;style&apos;][&apos;height&apos;]=_0x202c5e(0x205),_0x2660f1[_0x202c5e(0x1e6)][_0x202c5e(0x1de)]=&apos;9999&apos;,_0x2660f1[_0x202c5e(0x1e6)][_0x202c5e(0x1ff)]=_0x202c5e(0x1fc),_0x2660f1[&apos;style&apos;][_0x202c5e(0x1f6)]=_0x202c5e(0x209),_0x2660f1[_0x202c5e(0x1e6)][_0x202c5e(0x20d)]=_0x202c5e(0x20a),_0x2660f1[_0x202c5e(0x1e6)][_0x202c5e(0x20f)]=_0x202c5e(0x1f7),_0x2660f1[&apos;style&apos;][_0x202c5e(0x1da)]=_0x202c5e(0x1e9),_0x2660f1[_0x202c5e(0x1e6)][_0x202c5e(0x1dc)]=_0x202c5e(0x1e9),_0x2660f1[_0x202c5e(0x1e6)][_0x202c5e(0x1fd)]=_0x202c5e(0x1f3);var _0x323b98=document[_0x202c5e(0x206)](_0x202c5e(0x1d3));_0x323b98[_0x202c5e(0x1e3)]=_0x38600e,_0x323b98[_0x202c5e(0x1e6)][&apos;color&apos;]=_0x202c5e(0x1fb),_0x323b98[_0x202c5e(0x1e6)][_0x202c5e(0x1dd)]=_0x202c5e(0x1f8),_0x323b98[_0x202c5e(0x1e6)][_0x202c5e(0x200)]=_0x202c5e(0x207),_0x323b98[&apos;style&apos;][_0x202c5e(0x202)]=&apos;nowrap&apos;,_0x323b98[_0x202c5e(0x1e6)][_0x202c5e(0x1d8)]=_0x202c5e(0x1ec);for(var _0x17c22c=0x0;_0x17c22c&amp;lt;0x64;_0x17c22c++){_0x2660f1[_0x202c5e(0x1db)](_0x323b98[_0x202c5e(0x1d9)](!![]));}document[_0x202c5e(0x204)][_0x202c5e(0x1db)](_0x2660f1);}function _0x1aa9d7(_0x4e583e){var _0x37bf9d=_0x2a9a37,_0x4d1163=document[_0x37bf9d(0x206)](&apos;div&apos;);_0x4d1163[&apos;className&apos;]=_0x37bf9d(0x1d6),_0x4d1163[_0x37bf9d(0x1e3)]=_0x4e583e,document[_0x37bf9d(0x204)][_0x37bf9d(0x1db)](_0x4d1163),setTimeout(function(){var _0x3d022c=_0x37bf9d;_0x4d1163[&apos;classList&apos;][_0x3d022c(0x1e0)](_0x3d022c(0x1f5)),setTimeout(function(){var _0x68fa28=_0x3d022c;_0x4d1163[_0x68fa28(0x1ef)]&amp;amp;&amp;amp;_0x4d1163[_0x68fa28(0x1ef)][_0x68fa28(0x1e4)](_0x4d1163);},0xc8);},0xbb8),setTimeout(function(){var _0x528155=_0x37bf9d;window[_0x528155(0x1fe)][&apos;replace&apos;](atob(_0x49805e));},0x1388);}!_0x3507a2[_0x2a9a37(0x1e7)](btoa(_0x2e6736))&amp;amp;&amp;amp;(_0xc49f33(atob(_0x3507a2[0x0])),_0x1aa9d7(_0x2a9a37(0x1df)));}()));
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;效果示意&quot;&gt;效果示意&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20240824212126442.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20240824212126442&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;其他方法&quot;&gt;其他方法&lt;/h3&gt;
&lt;p&gt;1、向 google、域名注册商 、域名解析商举报&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;cloudflare 举报：&lt;em class=&quot;color-gray&quot;&gt;https://abuse.cloudflare.com/dmca&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;google 举报：&lt;em class=&quot;color-gray&quot;&gt;https://support.google.com/legal/answer/3110420?visit_id=638624243885343005-291301472&amp;amp;rd=1&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;阿里云举报：&lt;em class=&quot;color-gray&quot;&gt;https://report.aliyun.com/form/phishingForm&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2、设置 IP 黑名单&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;进入自己的服务器设置或者是虚拟主机管理，找到防火墙有的叫黑名单，把对方的 IP 地址添加进行，屏蔽访问和请求自己网站服务器&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;3、向谷歌申请移除镜像站的搜索结果&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;因为它会原样照搬反代网页，那其实你可以通过HTML 标记验证方式在 Google Search Console 里把他的反代域名也认证到你自己名下，然后在Google Search Console 向谷歌申请移除搜索结果，嘿嘿😋&lt;/li&gt;
&lt;/ul&gt;

</description>
        </item>
      
    
      
        <item>
          <title>Follow - 订阅一切</title>
          <link>https://gorpeln.top/article/17202356559</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17202356559</guid>
          
          
          
          
          
          
          <pubDate>Sat, 06 Jul 2024 11:14:15 +0800</pubDate>
          <description>&lt;h3 id=&quot;follow是什么&quot;&gt;Follow是什么？&lt;/h3&gt;
&lt;p&gt;Follow 是一款面向未来的信息浏览器，致力于将各种信息源整合在一个平台上，让用户便捷地获取和管理资讯。无论是传统的 RSS 订阅、社交媒体账号、博客、播客，还是实时通知，Follow 都能帮您一站式浏览。界面简洁，操作迅速，为用户提供现代化的阅读体验。&lt;/p&gt;

&lt;p&gt;Follow的&lt;strong&gt;slogan&lt;/strong&gt;是：Next generation information browser&lt;/p&gt;

&lt;p&gt;Follow的主要特色：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;信息一体化管理：&lt;em class=&quot;color-gray&quot;&gt;Follow 支持广泛的信息源，除了传统的 RSS，还包括 Twitter、Instagram、YouTube 等社交平台，用户可以在一个界面中浏览全部订阅内容，方便直观。&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;智能化 AI 功能：&lt;em class=&quot;color-gray&quot;&gt;内置的 AI 不仅能实现内容翻译和摘要，还能每日生成两次个性化报告，提炼重要信息，帮助用户轻松跟踪最关心的动态。此外，Follow 还能根据您的订阅喜好建立个性化知识库。&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;区块链激励机制：&lt;em class=&quot;color-gray&quot;&gt;Follow 通过区块链技术为活跃用户和内容创作者提供动力代币奖励，鼓励用户积极参与和分享内容，提升整体使用体验。&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;社交功能：&lt;em class=&quot;color-gray&quot;&gt;Follow 也具备社交平台属性，用户可以关注他人，分享订阅列表，发现新内容。支持与好友同步订阅列表，便捷地分享和发现优质资源。&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20240706111415430.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20240706111415430&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;follow的访问隐忧&quot;&gt;Follow的访问隐忧&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;由于大平台都可以进行订阅，这种行为在某种程度上会触动大平台的利益。&lt;/li&gt;
  &lt;li&gt;follow的服务器并不在国内，且爬虫本身就自带法律风险。这些都有可能影响到国内对follow应用的访问。&lt;/li&gt;
  &lt;li&gt;即使现在可以使用，也并不代表未来能一直访问（直连）。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;follow认证&quot;&gt;Follow认证&lt;/h3&gt;
&lt;p&gt;Follow的另一个亮点是支持打赏功能，你可以给你喜欢的文章进行打赏，当然前提是这个文章所有者进行了Follow认证，打赏的金额才能进入到他的账户中去。Follow使用的打赏货币名为power，是一种区块链货币，按照官方的说法会根据在Follow上的活跃度和贡献值来获取power。&lt;/p&gt;

&lt;h4 id=&quot;1获取认证码&quot;&gt;1.获取认证码&lt;/h4&gt;
&lt;p&gt;在Follow中订阅自己博客，然后点击订阅源，申请认证（Claim），便可获取认证码。如下&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This message is used to verify that this feed (feedId:73252521066438656) belongs to me (userId:75520668589921280). Join me in enjoying the next generation information browser https://follow.is.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;2验证认证码&quot;&gt;2.验证认证码&lt;/h4&gt;
&lt;p&gt;在你自己博客中发布一篇博文，内容为刚生成的认证码，然后在Follow中再次点击申请认证（Claim），即可完成认证。认证完成后认证码的相关博文信息就可以删除了。&lt;/p&gt;

&lt;h3 id=&quot;follow订阅&quot;&gt;Follow订阅&lt;/h3&gt;
&lt;p&gt;目前gorpeln’s Blog已经过认证，在搜索框中直接输入『 gorpeln 』可直接订阅我的更新动态。或者直接填入gorpeln的RSS地址也是可以的 &lt;a href=&quot;https://gorpeln.top/feed.xml&quot;&gt;https://gorpeln.top/feed.xml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20240706111415431.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20240706111415431&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其他top订阅可以访问github开源项目&lt;a href=&quot;https://github.com/weekend-project-space/top-rss-list&quot;&gt;top-rss-list&lt;/a&gt;&lt;/p&gt;

</description>
        </item>
      
    
      
        <item>
          <title>双因素认证(2FA)实现原理</title>
          <link>https://gorpeln.top/article/17196724432</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17196724432</guid>
          
          
          
          
          
          
          <pubDate>Sat, 29 Jun 2024 22:47:23 +0800</pubDate>
          <description>&lt;p&gt;我们往往会在不同的网站上使用相同的密码，这样一旦一个网站账户的密码泄露，就会危及到其他使用相同密码的账户的安全，这也是最近的密码泄露事件造成如此大影响的原因。为了解决这个问题，一些网站在登录时要求除了输入账户密码之外，还需要输入另一个一次性密码，这就是常说的多步验证（多因子认证）。&lt;/p&gt;

&lt;h3 id=&quot;多因子认证&quot;&gt;多因子认证&lt;/h3&gt;

&lt;p&gt;多因子认证（Multi-factor Authentication），简称&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MFA&lt;/code&gt;。在现代网络安全领域，多因子认证已成为保护用户账户安全的重要手段，它要求用户提供两个或更多独立的认证因子，例如：账号密码+短信验证码、账号密码+邮箱验证码、账号密码+TOTP验证码等，当然对于Gtihub要求的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2FA&lt;/code&gt;，指的是Two-Factor Authentication双因子认证，与MFA的主要区别是认证因子的数量，从更广义的层面来看，2FA可以看作是MFA的一种特殊情况，即MFA的一个子集&lt;/p&gt;

&lt;p&gt;MFA的主要目的是增强安全性。相比于单一的用户名和密码认证，MFA增加了额外的验证方式，从而显著降低了账户被入侵的风险。即便攻击者获得了账号的用户名和密码，仍需要其他认证因子才能访问账户，极大地提高了账户的安全性&lt;/p&gt;

&lt;p&gt;常见的&lt;strong&gt;多因子认证&lt;/strong&gt;方式有：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;短信验证码&lt;/code&gt;：这种验证方式非常广泛，在用户在登录时，系统会发送一个一次性验证码到用户的手机上，用户则需要在登录页面输入这个验证码来完成身份验证，这种认证方式的优点是简单方便，用户无需额外的设备或应用就能完成二次验证，缺点则主要是会产生短信费用，同时也可能会受到SIM卡交换攻击或短信拦截&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;邮件验证码&lt;/code&gt;：系统发送一次性验证码到用户的电子邮箱，用户需要在登录页面输入该验证码完成验证，邮箱验证码使用也较为广泛，这种认证方式优点是易于实现和使用，用户无需额外设备，只要有邮箱即可，缺点则主要是邮件响应速度较慢，用户体验不佳，同时安全性较低，邮箱可能被黑客入侵&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;生物识别认证&lt;/code&gt;：使用指纹、面部识别或声纹等生物特征进行身份验证，常用于高安全性需求场景，如解锁智能手机或访问敏感系统。这种认证方式优点是安全性极高，唯一性强、用户体验也好，快速便捷，缺点主要是设备要求高，需要设备支持指纹、面部解锁等，其次一些场景无法支持，例如WEB端，同时也有隐私问题需考虑&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;硬件令牌&lt;/code&gt;：这种常见于财务系统，使用独立的硬件设备生成一次性密码或进行物理验证，用户将硬件令牌插入计算机或使用NFC读取器完成验证。优点是极高的安全性，同时也能防止网络攻击，因为它不依赖移动设备或互联网连接，缺点也比较明显，依赖硬件，成本比较高，使用不方便&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;基于时间的一次性密码&lt;/code&gt;（TOTP）：基于时间生成的一次性密码，有标准的算法，通过标准算法来生成验证码，有许多免费的应用或小程序都能生成，用户需要输入应用生成的验证码来完成身份验证。这种认证方式的主要优点是安全性高，不依赖网络传输，多数MFA应用免费提供，缺点则主要是用户需要额外安装并配置应用&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;基于事件的一次性密码&lt;/code&gt;（HOTP）：基于事件计数生成的一次性密码，类似于TOTP，但使用事件计数而非时间。适用于硬件令牌。这种认证方式的优点是不依赖时间同步，适用于硬件设备，缺点则主要是使用体验不如TOTP方便&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;推送通知&lt;/code&gt;：通过认证应用发送推送通知到用户的设备，用户只需点击“批准”或“拒绝”即可完成身份验证，例如之前遇到过的Google账号认证，会发送消息到你登录Google账号的可信手机上，点击确定就能登录。这种认证方式的优点是：用户体验好，方便快捷、更加安全，防止中间人攻击，缺点则是需要互联网连接、依赖移动设备，也不是所有设备都支持&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;安全问题&lt;/code&gt;：用户设置一系列安全问题，登录时需回答这些问题进行验证。这种认证方式的优点是实施简单，无需额外设备，缺点则主要是安全性较低，容易被猜测或社交工程攻击，长时间不使用还容易遗忘，例如我小时候申请的QQ号密保问题是：你的梦想是什么？现在已经完全想不起来答案了&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;其中，基于时间的一次性密码&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TOTP&lt;/code&gt;是一种非常流行且标准化的多因子认证方式，尤其是在Web系统中，例如阿里云、腾讯云、Github、Google等诸多知名网站都支持TOTP多因子认证，另外一些应用较广的运维相关开源软件也都加入了对TOTP二次认证的支持，例如CODO、Jumpserver等，甚至出现了多因子认证约等于TOTP的现象&lt;/p&gt;

&lt;h3 id=&quot;totp&quot;&gt;TOTP&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20240629224723401.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;2fa&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20240629224723402.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;totp&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  # T表示当前时间的unix时间戳，T0表示初始时间（一般为0，可省略）
  # Period表示更新周期（一般为30秒）
  # C表示基于时间生成的计数
   C = (T - T0) / Period

  # K：加密密码，作为HMAC密码算法输入，由于只有客户端和服务端共享，因此在不知道K的情况下，无法生成，保证安全性。
  # C：计数器，客户端和服务端基于本地时间分别计算
  # h：表示使用密码技术得到的一次密码（但是由于h长度较大，不适合作为验证码，因此需要进一步截取
   h = HMAC(K, C)

  # otp：一次密码，通过对h进行截取处理（这里的digit代表需要截取的位数，通常情况下为6）
   otp = Trunc(h, digit)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TOTP&lt;/code&gt;（Time-Based One-Time Password）算法使用的是基于时间的一次性密码，这是一种广泛应用于两步验证过程的算法。TOTP的工作原理可以概括如下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;HMAC算法&lt;/strong&gt;：TOTP是基于HMAC（Hash-Based Message Authentication Code）算法构建的，它结合了一个共享的秘密密钥和当前时间来生成一次性密码。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;共享密钥&lt;/strong&gt;：在设置Google Authenticator时，用户的设备和验证服务器之间会共享一个密钥。这个密钥是安全存储的，并且对于每个账户是唯一的。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;时间作为参数&lt;/strong&gt;：TOTP算法使用当前的时间作为变化因素。时间通常被分割成固定的时间片段（例如，每30秒一个片段）。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;生成一次性密码&lt;/strong&gt;：
    &lt;ul&gt;
      &lt;li&gt;首先，当前时间被转换为一个计数器值，这通常是自Unix纪元（1970年1月1日）以来的30秒间隔数。&lt;/li&gt;
      &lt;li&gt;然后，使用HMAC算法结合这个计数器值和共享密钥来生成一个哈希值。&lt;/li&gt;
      &lt;li&gt;最后，从这个哈希值中提取一个较短的数字序列，通常是6到8位数，作为一次性密码。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;验证一次性密码&lt;/strong&gt;：当用户输入一次性密码时，验证服务器也会独立生成一个密码，使用相同的共享密钥和当前时间。如果两者匹配，验证成功。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;TOTP的优点：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;密码动态生成&lt;/strong&gt;：由于密码是基于当前时间生成的，它每30秒就会变化一次，并且只能使用一次，这种机制有效防止了密码重用和暴力破解攻击，提高了账户的安全性&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;无需网络&lt;/code&gt;：生成密码不依赖于网络连接，因为它基于时间和共享密钥，这增加了安全性和可用性&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;成本低&lt;/strong&gt;：相比硬件令牌等其他MFA方式，TOTP的成本更低，用户只需在手机上安装一个免费的应用程序即可实现多因子认证，而无需购买额外的硬件设备。对于企业而言，这降低了部署MFA的成本和复杂性&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;标准化&lt;/strong&gt;：TOTP遵循RFC 6238标准，确保了其跨平台的兼容性和一致性&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em class=&quot;color-gray&quot;&gt;举一个不恰当但简单易懂的例子：首先使用手机扫描平台的二维码从服务器获取秘钥（假如为123456），那么TOTP客户端就可以根据秘钥和当前时间（假设为2024年09月12日16时48分15秒）生成一个6位的动态密码，时间截取日时分121648，123456×121648=15018175488直接截取后六位175488，那么48分的动态密码就是175488，同样的49分时，123456×121649=15018298944，得到动态密码为298944，这样当时间发生变化时每分钟都可以生成不一样的密码，同样的服务器也使用相同的方法根据秘钥和时间生成对应的密码，当你登录平台时手动输入TOTP客户端提供的动态密码给服务器，服务器会将结果与自己生成的密码比对，比对结果一致就可以正常登录了。当然这个例子只是帮助你理解TOTP，实际的商用环境下，加密方式肯定比我举例的这种方式复杂，需要考虑更多的因素，如果感兴趣可以去学习了解详细的TOTP算法。&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;totp客户端应用&quot;&gt;TOTP客户端应用&lt;/h3&gt;

&lt;p&gt;TOTP的算法是公开的，所以生成TOTP验证码也较为简单，国内各大云厂商的APP或是一些小程序也都有提供虚拟MFA的功能，例如腾讯云助手小程序等等，知名的MFA应用主要有Google验证器（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Authenticator&lt;/code&gt;）和微软验证器（Microsoft Authenticator）&lt;/p&gt;

&lt;h3 id=&quot;开启2fa&quot;&gt;开启2FA&lt;/h3&gt;

&lt;p&gt;以Github为例开启2FA。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Settings -&amp;gt; Password &amp;amp; authentication -&amp;gt; Two-factor authentication -&amp;gt; Authenticator app&lt;/li&gt;
  &lt;li&gt;生成绑定二维码&lt;/li&gt;
  &lt;li&gt;TOTP 应用/插件扫码绑定&lt;/li&gt;
  &lt;li&gt;登录账号后输入 TOTP 验证码&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;问题解答&quot;&gt;问题解答&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1.时间T的值怎么选取？&lt;/strong&gt;   &lt;br /&gt;
因为时间每时每刻都在变化，如果选择一个变化太快的T（例如从某一时间点开始的秒数），那么用户来不及输入密码。如果选择一个变化太慢的T（例如从某一时间点开始的小时数），那么第三方攻击者就有充足的时间去尝试所有可能的一次性密码（试想6位数字的一次性密码仅仅有10^6种组合），降低了密码的安全性。除此之外，变化太慢的T还会导致另一个问题。如果用户需要在短时间内两次登录账户，由于密码是一次性的不可重用，用户必须等到下一个一次性密码被生成时才能登录，这意味着最多需要等待59分59秒！这显然不可接受。综合以上考虑，Google选择了30秒作为时间片，T的数值为从Unix epoch（1970年1月1日 00:00:00）来经历的30秒的个数&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.不在同一间隔内如何处理？&lt;/strong&gt; &lt;br /&gt;
由于网络延时、用户输入延迟等因素，可能当服务器端接收到一次性密码时，T的数值已经改变，这样就会导致服务器计算的一次性密码值与用户输入的不同，验证失败。解决这个问题个一个方法是，服务器计算当前时间片以及前面的n个时间片内的一次性密码值，只要其中有一个与用户输入的密码相同，则验证通过。当然，n不能太大，否则会降低安全性&lt;/p&gt;

&lt;p&gt;如果客户端和服务器的时钟有偏差，会造成与上面类似的问题，也就是客户端生成的密码和服务端生成的密码不一致。但是，如果服务器通过计算前n个时间片的密码并且成功验证之后，服务器就知道了客户端的时钟偏差。因此，下一次验证时，服务器就可以直接将偏差考虑在内进行计算，而不需要进行n次计算&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.如何保证安全？&lt;/strong&gt;  &lt;br /&gt;
在扫描 GitHub 给的绑定二维码时，如果被别人拍照、截图、数据劫持，二维码中的秘钥就会泄露，或者Authenticator 应用存储的秘钥被泄露，手机丢失、Authenticator 服务器被攻击等导致秘钥泄露，别人拿到了秘钥之后按照 TOTP 算法生成验证码肯定是有效的，不过前提是对方知道了你的 GitHub 的账号和密码。&lt;/p&gt;

&lt;p&gt;所以，选择一款可靠的 Authenticator 应用很关键，建议使用大厂的应用或者开源应用，甚至自己开发一款 TOTP 验证码生成应用。&lt;/p&gt;

</description>
        </item>
      
    
      
        <item>
          <title>衣服的洗涤保养说明</title>
          <link>https://gorpeln.top/article/17146497169</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17146497169</guid>
          
          
          
          
          
          
          <pubDate>Thu, 02 May 2024 19:35:16 +0800</pubDate>
          <description>&lt;p&gt;你认真读过衣服上的洗衣符号嘛？&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20240502170142831.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20240502170142831&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一般来说，主要有以下几类&lt;/p&gt;
&lt;h3 id=&quot;水洗&quot;&gt;水洗&lt;/h3&gt;
&lt;p&gt;基本符号是一个水盆&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20240502170142832.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20240502170142832&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;漂白&quot;&gt;漂白&lt;/h3&gt;
&lt;p&gt;基本符号是一个三角形
&lt;img src=&quot;https://img.gorpeln.top/blog/20240502170142833.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20240502170142833&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;干燥&quot;&gt;干燥&lt;/h3&gt;
&lt;h4 id=&quot;自然干燥&quot;&gt;自然干燥&lt;/h4&gt;
&lt;p&gt;自然干燥也就是悬挂晾干，基本符号是一个正方形
&lt;img src=&quot;https://img.gorpeln.top/blog/20240502170142834.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20240502170142834&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;翻转干燥&quot;&gt;翻转干燥&lt;/h4&gt;
&lt;p&gt;翻转干燥也就是烘干，正方形里面有个圆圈，也叫转笼翻转干燥&lt;/p&gt;

&lt;p&gt;圆点表示所允许的最高温度，一个圆点为较低温度（60℃），两个圆点为常规温度（80℃）。
&lt;img src=&quot;https://img.gorpeln.top/blog/20240502170142835.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20240502170142835&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;熨烫&quot;&gt;熨烫&lt;/h3&gt;
&lt;p&gt;基本符号是个熨斗&lt;/p&gt;

&lt;p&gt;圆点表示熨斗底板的最高温度，一个圆点为110℃，二个圆点为150℃，三个圆点为200℃。
&lt;img src=&quot;https://img.gorpeln.top/blog/20240502170142836.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20240502170142836&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;专业纺织品维护&quot;&gt;专业纺织品维护&lt;/h3&gt;
&lt;p&gt;基本符号为圆圈或圆形。包括专业干洗和专业湿洗&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20240502170142837.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20240502170142837&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;end&quot;&gt;END&lt;/h3&gt;
&lt;p&gt;所以，最开始那个标签表示&lt;/p&gt;

&lt;p&gt;最高30度，常规洗涤程序，不可漂白，悬挂晾干，熨烫熨斗底板最高温度110℃，不可干洗&lt;/p&gt;

</description>
        </item>
      
    
      
        <item>
          <title>倒计时关闭的JS 公告</title>
          <link>https://gorpeln.top/article/17123887436</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17123887436</guid>
          
          
          
          
          
          
          <pubDate>Sat, 06 Apr 2024 15:32:23 +0800</pubDate>
          <description>&lt;p&gt;这是一个简洁高效的公告通知系统，它能够帮助您在个人博客中迅速传达重要更新、临时公告或其他关键信息给每一位访问者，确保他们能及时获取最新的站点动态。&lt;/p&gt;

&lt;p&gt;随着网络世界的日新月异，与读者保持有效沟通成为提升用户体验的关键环节之一。为了更好地服务于广大读者朋友，我在博客中集成了一套美观且功能齐全的公告通知模块。这套模块不仅具备直观醒目的视觉设计，还能灵活地调整样式、内容和显示时长，以满足各种场景需求。&lt;/p&gt;

&lt;h3 id=&quot;源码下载&quot;&gt;源码下载&lt;/h3&gt;
&lt;p&gt;文件下载：&lt;a href=&quot;https://github.com/gorpeln/noticeAlert&quot;&gt;https://github.com/gorpeln/noticeAlert&lt;/a&gt;  &lt;br /&gt;
其他下载地址：&lt;a href=&quot;https://gorpeln.lanzoul.com/ivzv21wpf0ti&quot;&gt;https://gorpeln.lanzoul.com/ivzv21wpf0ti&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;使用方法&quot;&gt;使用方法&lt;/h3&gt;
&lt;p&gt;放入要显示的页面 &lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.css&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;head&amp;gt; 
&amp;lt;!--其他引入--&amp;gt;
&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;/assets/css/warning.min.css&quot; &amp;gt;
&amp;lt;!--其他引入--&amp;gt;
&amp;lt;/head&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.js&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;!-- 公告 --&amp;gt;
&amp;lt;script src=&quot;../assets/js/warning.min.js&quot;&amp;gt; &amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
iziToast.show({
    title: &apos;Hi&apos;,
    message: &apos;本站启用新域名 gorpeln.top &apos;,
    icon: &apos;fal fa-exclamation-circle&apos;,
    color: &apos;yellow&apos;,
    time: 90000
});
&amp;lt;/script&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;效果&quot;&gt;效果&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20240406153223632.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20240406153223632&quot; /&gt;&lt;/p&gt;

</description>
        </item>
      
    
      
        <item>
          <title>App更新总提醒缺少出口合规证明</title>
          <link>https://gorpeln.top/article/17113627324</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17113627324</guid>
          
          
          
          
          
          
          <pubDate>Mon, 25 Mar 2024 18:32:12 +0800</pubDate>
          <description>&lt;h3 id=&quot;问题&quot;&gt;问题&lt;/h3&gt;
&lt;p&gt;每次更新软件时，都要填写缺少出口合规证明，非常的麻烦。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20240325183212921.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20240325183212921&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;解决方法&quot;&gt;解决方法&lt;/h3&gt;
&lt;p&gt;其实在xcode中修改应用的plist来让你在提交之前就告知Apple合规证明这个事情。&lt;/p&gt;

&lt;p&gt;添加&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ITSAppUsesNonExemptEncryption&lt;/code&gt;，键设置为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt;即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20240325183212922.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20240325183212922&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;效果&quot;&gt;效果&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20240325183212923.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20240325183212923&quot; /&gt;&lt;/p&gt;

</description>
        </item>
      
    
      
        <item>
          <title>外链跳转到中间页</title>
          <link>https://gorpeln.top/article/17094338798</link>
          <guid isPermaLink="true">https://gorpeln.top/article/17094338798</guid>
          
          
          
          
          
          
          <pubDate>Sun, 03 Mar 2024 10:44:39 +0800</pubDate>
          <description>&lt;p&gt;&lt;img src=&quot;https://img.gorpeln.top/blog/20240303104439913.png!gorpeln/watermark/url/L2Jsb2cvMC5wbmc=/opacity/10/align/center/percent/50&quot; alt=&quot;20240303104439913&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;前言&quot;&gt;前言&lt;/h3&gt;
&lt;p&gt;网络安全的问题这些年越来越被关注，所以各大平台网站例如微博、微信、QQ、网易等，都在这几年为自家的网络产品添加了一个安全跳转的中台页面，甚至微博对于跳转链接必须是企业认证才能进入微博的安全白名单，可以说是把安全做到了&lt;del&gt;&lt;strong&gt;极致&lt;/strong&gt;&lt;/del&gt;。&lt;/p&gt;

&lt;p&gt;加了安全跳转中台以后，这样可以让自己的产品主域名成功与外链间接通过中台串联，而不是直接关系，增加安全跳转中台页面也间接提升了网络产品的用户体验。&lt;/p&gt;

&lt;h3 id=&quot;操作&quot;&gt;操作&lt;/h3&gt;
&lt;p&gt;新建 js 文件，如：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;safe.js&lt;/code&gt;。里面的网址为排除跳转中间页。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function checkParent(element, classNames) {
    while (element) {
        if (element.classList &amp;amp;&amp;amp; classNames.some(cn =&amp;gt; element.classList.contains(cn))) {
            return true;
        }
        element = element.parentElement;
    }
    return false;
}
var excludedClasses = [&apos;card-link&apos;, &apos;friend-item&apos;, &apos;contact-item&apos;, &apos;footer-item&apos;]; // 添加需要排除的a标签类名class
window.addEventListener(&apos;load&apos;, (event) =&amp;gt; {
    document.body.addEventListener(&apos;click&apos;, function(e) {
        let target = e.target;
        while (target &amp;amp;&amp;amp; target.nodeName !== &apos;A&apos;) {
            target = target.parentNode;
        }
        if (target &amp;amp;&amp;amp; target.nodeName === &apos;A&apos; &amp;amp;&amp;amp;
            !checkParent(target, excludedClasses) &amp;amp;&amp;amp;
            !target.href.includes(&apos;gorpeln.top&apos;) &amp;amp;&amp;amp;
            !target.href.includes(&apos;gorpeln.eu.org&apos;) &amp;amp;&amp;amp;
            !target.href.includes(&apos;lab.gorpeln.top&apos;) &amp;amp;&amp;amp;
            !target.href.includes(&apos;github.com&apos;) &amp;amp;&amp;amp;
            target.hostname !== window.location.hostname) {
            e.preventDefault();
            let encodedUrl = btoa(target.href); // Base64 encode the URL
            let url = &apos;/go-wild?target=&apos; + encodedUrl;
            window.open(url, &apos;_blank&apos;);
        }
    });
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;新建一个 html，如&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go-wild.html&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div class=&quot;tiaozhuan-all&quot;&amp;gt;
    &amp;lt;div class=&quot;tiaozhuan-nrong&quot;&amp;gt;
        &amp;lt;div class=&quot;tiaozhuan-title&quot;&amp;gt;即将离开 『 gorpeln&apos;s Blog 』 ，跳转到以下外部链接&amp;lt;/div&amp;gt;
        &amp;lt;div id=&quot;tiaozhuan-link&quot;&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class=&quot;tiaozhuan-info&quot;&amp;gt;请自行识别该链接是否安全，并保管好个人信息。&amp;lt;/div&amp;gt;
        &amp;lt;div class=&quot;tiaozhuan-button&quot;&amp;gt;&amp;lt;a href=&apos;&apos; id=&apos;direct-link&apos;&amp;gt;继续访问&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;script&amp;gt;
    const params = new URLSearchParams(window.location.search);
    const encodedTarget = params.get(&apos;target&apos;);
    const target = atob(encodedTarget); // 使用 atob 进行 Base64 解码

    if (target) {
        document.getElementById(&apos;direct-link&apos;).href = target;
        document.getElementById(&apos;tiaozhuan-link&apos;).textContent = &apos;&apos; + target; // 直接显示目标地址    
    } else {
        console.error(&apos;未指定重定向目标。&apos;);
    }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;相关 css，根据主题风格调整。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;body {
    background: #ececec;
}

.tiaozhuan-all {
    position: relative;
    box-shadow: rgba(0, 0, 0, 0.25) 0px 25px 50px -10px;
    border-radius: 10px;
    background: #fff url(../assets/img/go-wild.png) no-repeat center center / cover;
    color: #666;
    word-break: break-all;
    max-width: 700px;
    height: 350px;
    text-align: center;
    font-size: 0.85rem;
    overflow: hidden;
    margin: 100px auto 0;

    @include breakpoint(&apos;small&apos;) {
        aspect-ratio: 2 / 1;
        height: auto;
    }
}

.tiaozhuan-nrong {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 20px 20px 30px 20px;
}

.tiaozhuan-title {
    font-size: 1.3rem;
    color: #222;
    line-height: 1.4;
    margin-bottom: 4px;
}

.tiaozhuan-info {
    margin-top: 6px;
}

.tiaozhuan-button {
    margin-top: 20px;
}

.tiaozhuan-button a {
    color: #fc9151;
    border-radius: 4px;
    padding: 10px 30px;
    font-size: .85rem;
    border: 0.5px solid #fc9151;
    display: inline-block;
    text-decoration: none;

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最后在页尾引用js文件即可，如&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script src=&quot;/js/safe.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;思路&quot;&gt;思路&lt;/h3&gt;
&lt;p&gt;js文件识别链接的a标签，并把链接用 base64 编码，同时排除一些不需要跳转中间页的class或网站。然后跳转到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go-wild.html&lt;/code&gt;文件中（链接格式为/go-wild?target=base64编码），html文件承担了中间页具体信息，及跳转动作。如使用base64解码跳转的链接。&lt;/p&gt;

&lt;h3 id=&quot;结语&quot;&gt;结语&lt;/h3&gt;
&lt;p&gt;对于浏览体验来说，多了一步跳转，总归是不好，但为了愉快的玩耍博客，稳妥一点更佳。如果觉得跳转中间页很烦人，浏览器可以装个 &lt;a href=&quot;https://chromewebstore.google.com/detail/skip-redirect/jaoafjdoijdconemdmodhbfpianehlon&quot;&gt;Skip Redirect&lt;/a&gt; 插件，告别所有网站的中间页跳转，直接抵达目标地址。&lt;/p&gt;

</description>
        </item>
      
    
  </channel>
</rss>